{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { updateParameter } from \"../src/helpers/update\";\nimport { MakeCar, ModelMake, VersionModel, VehiclesPage1, VehiclesPage2, VehiclesPage3 } from \"../src/services/requests\";\n\nfunction Page({\n  GetMakeCar,\n  GetVehiclesPage1,\n  GetVehiclesPage2,\n  GetVehiclesPage3\n}) {\n  const {\n    0: makeName,\n    1: setMakeName\n  } = useState();\n  const {\n    0: modelName,\n    1: setModelName\n  } = useState();\n  const {\n    0: modelId,\n    1: setModelId\n  } = useState();\n  const {\n    0: model,\n    1: setModel\n  } = useState();\n  const {\n    0: versionId,\n    1: setVersionId\n  } = useState();\n  const {\n    0: version,\n    1: listVersion\n  } = useState();\n  const {\n    0: price,\n    1: setPrice\n  } = useState();\n  const {\n    0: year,\n    1: setYear\n  } = useState();\n  const {\n    0: f,\n    1: setF\n  } = useState([]);\n  const allVehicles = [...GetVehiclesPage1, ...GetVehiclesPage2, ...GetVehiclesPage3];\n\n  const readModel = async () => {\n    const vehicleSelect = GetMakeCar.filter(vehicle => {\n      return vehicle.ID == modelId;\n    });\n    const GetModelMake = await ModelMake(modelId);\n    setMakeName(vehicleSelect[0].Name);\n    setModel(GetModelMake);\n  };\n\n  useEffect(() => {\n    readModel();\n  }, [modelId]);\n\n  const readVersion = async () => {\n    let modelSelect = [];\n\n    if (model) {\n      modelSelect = model.filter(vehicle => {\n        console.log(vehicle.ID, versionId, \"takjda\");\n        return vehicle.ID == versionId;\n      });\n    }\n\n    console.log(modelSelect, \"modelSelect\");\n    const GetVersionModel = await VersionModel(versionId);\n    setModelName(modelSelect[0].Name);\n    listVersion(GetVersionModel);\n  };\n\n  useEffect(() => {\n    readVersion();\n  }, [versionId]);\n  const valormaior = parseInt(price) + 19999;\n\n  function searchVehicle() {\n    const filtredVehicle = allVehicles.filter(filtred => {\n      console.log(filtred.Model, \" filtred.Model\");\n      return filtred.Make == makeName && filtred.Model == modelName && filtred.Price >= price && parseInt(filtred.Price) <= valormaior;\n    });\n    console.log(filtredVehicle, \"filtredVehicle\");\n    setF(filtredVehicle);\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"form\", null, __jsx(\"input\", {\n    name: \"locale\",\n    placeholder: \"Onde:\"\n  }), __jsx(\"select\", {\n    className: \"input\",\n    name: \"distance\"\n  }, __jsx(\"option\", {\n    placeholder: \"Raio:\"\n  })), __jsx(\"select\", {\n    className: \"input\",\n    name: \"make\",\n    onChange: e => {\n      setModelId(e.target.value);\n    }\n  }, __jsx(\"option\", null, \"Todas\"), GetMakeCar.map(make => {\n    return __jsx(\"option\", {\n      value: make.ID,\n      className: make.ID,\n      key: make.ID\n    }, make.Name);\n  })), __jsx(\"select\", {\n    className: \"input\",\n    name: \"model\",\n    onChange: e => {\n      setVersionId(e.target.value);\n    }\n  }, __jsx(\"option\", null, \"Todas\"), model && __jsx(React.Fragment, null, model.map(mode => {\n    return __jsx(\"option\", {\n      value: mode.ID,\n      key: mode.ID\n    }, mode.Name);\n  }))), __jsx(\"select\", {\n    className: \"input\",\n    name: \"year\",\n    onChange: e => {\n      setYear(e.target.value);\n    }\n  }, __jsx(\"option\", null, \"Ano Desejado\"), __jsx(\"option\", {\n    value: \"2012\"\n  }, \"2012\"), __jsx(\"option\", {\n    value: \"2013\"\n  }, \"2013\"), __jsx(\"option\", {\n    value: \"2014\"\n  }, \"2014\"), __jsx(\"option\", {\n    value: \"2015\"\n  }, \"2015\"), __jsx(\"option\", {\n    value: \"2016\"\n  }, \"2016\"), __jsx(\"option\", {\n    value: \"2017\"\n  }, \"2017\"), __jsx(\"option\", {\n    value: \"2018\"\n  }, \"2018\"), __jsx(\"option\", {\n    value: \"2019\"\n  }, \"2019\"), __jsx(\"option\", {\n    value: \"2020\"\n  }, \"2020\")), __jsx(\"select\", {\n    className: \"input\",\n    name: \"price\",\n    onChange: e => {\n      setPrice(e.target.value);\n    }\n  }, __jsx(\"option\", null, \"Faixa de Pre\\xE7o\"), __jsx(\"option\", {\n    value: \"0\"\n  }, \"De 0 \\xE1 R$ 20.000\"), __jsx(\"option\", {\n    value: \"20000\"\n  }, \"De R$ 20.000 \\xE1 R$ 39.999\"), __jsx(\"option\", {\n    value: \"40000\"\n  }, \"De R$ 40.000 \\xE1 R$ 59.999\"), __jsx(\"option\", {\n    value: \"60000\"\n  }, \"De R$ 60.000 \\xE1 R$ 79.999\"), __jsx(\"option\", {\n    value: \"80000\"\n  }, \"Mais de R$ 80.000\")), __jsx(\"select\", {\n    className: \"input\",\n    name: \"version\"\n  }, __jsx(\"option\", null, \"Todas\"), version && __jsx(React.Fragment, null, version.map(versio => {\n    return __jsx(\"option\", {\n      value: versio.Name,\n      key: versio.ID\n    }, versio.Name);\n  }))), __jsx(\"button\", null, \"Limpar Filtros\"), __jsx(\"button\", {\n    onClick: e => {\n      e.preventDefault();\n      searchVehicle();\n    }\n  }, \"Ver Ofertas\")), __jsx(\"div\", {\n    className: \"boxes\"\n  }, f.map(vehicle => {\n    return __jsx(\"div\", {\n      className: \"box\"\n    }, __jsx(\"p\", null, \"Marca: \", vehicle.Make), __jsx(\"p\", null, \"Modelo: \", vehicle.Model), __jsx(\"p\", null, \"Vers\\xE3o: \", vehicle.Version), __jsx(\"img\", {\n      src: vehicle.Image\n    }), __jsx(\"p\", null, \"KM: \", vehicle.KM), __jsx(\"p\", null, \"Pre\\xE7o: \", vehicle.Price), __jsx(\"p\", null, \"Ano: \", vehicle.YearModel, \"/ \", vehicle.YearFab), __jsx(\"p\", null, \"Cor: \", vehicle.Color));\n  })));\n}\n\nPage.getInitialProps = async () => {\n  const GetMakeCar = await MakeCar();\n  const GetVehiclesPage1 = await VehiclesPage1();\n  const GetVehiclesPage2 = await VehiclesPage2();\n  const GetVehiclesPage3 = await VehiclesPage3();\n  return {\n    GetMakeCar,\n    GetVehiclesPage1,\n    GetVehiclesPage2,\n    GetVehiclesPage3\n  };\n};\n\nexport default Page;","map":{"version":3,"sources":["C:/Users/Felipe Paulino/Documents/GitHub/Web-Motors/pages/index.jsx"],"names":["React","useState","useEffect","updateParameter","MakeCar","ModelMake","VersionModel","VehiclesPage1","VehiclesPage2","VehiclesPage3","Page","GetMakeCar","GetVehiclesPage1","GetVehiclesPage2","GetVehiclesPage3","makeName","setMakeName","modelName","setModelName","modelId","setModelId","model","setModel","versionId","setVersionId","version","listVersion","price","setPrice","year","setYear","f","setF","allVehicles","readModel","vehicleSelect","filter","vehicle","ID","GetModelMake","Name","readVersion","modelSelect","console","log","GetVersionModel","valormaior","parseInt","searchVehicle","filtredVehicle","filtred","Model","Make","Price","e","target","value","map","make","mode","versio","preventDefault","Version","Image","KM","YearModel","YearFab","Color","getInitialProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport { updateParameter } from \"../src/helpers/update\";\r\nimport {\r\n  MakeCar,\r\n  ModelMake,\r\n  VersionModel,\r\n  VehiclesPage1,\r\n  VehiclesPage2,\r\n  VehiclesPage3,\r\n} from \"../src/services/requests\";\r\n\r\nfunction Page({\r\n  GetMakeCar,\r\n  GetVehiclesPage1,\r\n  GetVehiclesPage2,\r\n  GetVehiclesPage3,\r\n}) {\r\n  const [makeName, setMakeName] = useState();\r\n  const [modelName, setModelName] = useState();\r\n  const [modelId, setModelId] = useState();\r\n  const [model, setModel] = useState();\r\n  const [versionId, setVersionId] = useState();\r\n  const [version, listVersion] = useState();\r\n  const [price, setPrice] = useState();\r\n  const [year, setYear] = useState();\r\n  const [f, setF] = useState([]);\r\n\r\n  const allVehicles = [\r\n    ...GetVehiclesPage1,\r\n    ...GetVehiclesPage2,\r\n    ...GetVehiclesPage3,\r\n  ];\r\n  const readModel = async () => {\r\n    const vehicleSelect = GetMakeCar.filter((vehicle) => {\r\n      return vehicle.ID == modelId;\r\n    });\r\n    const GetModelMake = await ModelMake(modelId);\r\n    setMakeName(vehicleSelect[0].Name);\r\n    setModel(GetModelMake);\r\n  };\r\n  useEffect(() => {\r\n    readModel();\r\n  }, [modelId]);\r\n\r\n  const readVersion = async () => {\r\n    let modelSelect = [];\r\n    if (model) {\r\n      modelSelect = model.filter((vehicle) => {\r\n        console.log(vehicle.ID, versionId, \"takjda\");\r\n        return vehicle.ID == versionId;\r\n      });\r\n    }\r\n    console.log(modelSelect, \"modelSelect\");\r\n    const GetVersionModel = await VersionModel(versionId);\r\n    setModelName(modelSelect[0].Name);\r\n    listVersion(GetVersionModel);\r\n  };\r\n  useEffect(() => {\r\n    readVersion();\r\n  }, [versionId]);\r\n\r\n  const valormaior = parseInt(price) + 19999;\r\n\r\n  function searchVehicle() {\r\n    const filtredVehicle = allVehicles.filter((filtred) => {\r\n      console.log(filtred.Model, \" filtred.Model\");\r\n      return (\r\n        filtred.Make == makeName &&\r\n        filtred.Model == modelName &&\r\n        filtred.Price >= price &&\r\n        parseInt(filtred.Price) <= valormaior\r\n      );\r\n    });\r\n    console.log(filtredVehicle, \"filtredVehicle\");\r\n    setF(filtredVehicle);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <form>\r\n        <input name=\"locale\" placeholder=\"Onde:\"></input>\r\n        <select className=\"input\" name=\"distance\">\r\n          <option placeholder=\"Raio:\"></option>\r\n        </select>\r\n\r\n        <select\r\n          className=\"input\"\r\n          name=\"make\"\r\n          onChange={(e) => {\r\n            setModelId(e.target.value);\r\n          }}\r\n        >\r\n          <option>Todas</option>\r\n          {GetMakeCar.map((make) => {\r\n            return (\r\n              <option value={make.ID} className={make.ID} key={make.ID}>\r\n                {make.Name}\r\n              </option>\r\n            );\r\n          })}\r\n        </select>\r\n        <select\r\n          className=\"input\"\r\n          name=\"model\"\r\n          onChange={(e) => {\r\n            setVersionId(e.target.value);\r\n          }}\r\n        >\r\n          <option>Todas</option>\r\n          {model && (\r\n            <>\r\n              {model.map((mode) => {\r\n                return (\r\n                  <option value={mode.ID} key={mode.ID}>\r\n                    {mode.Name}\r\n                  </option>\r\n                );\r\n              })}\r\n            </>\r\n          )}\r\n        </select>\r\n        <select\r\n          className=\"input\"\r\n          name=\"year\"\r\n          onChange={(e) => {\r\n            setYear(e.target.value);\r\n          }}\r\n        >\r\n          <option>Ano Desejado</option>\r\n          <option value=\"2012\">2012</option>\r\n          <option value=\"2013\">2013</option>\r\n          <option value=\"2014\">2014</option>\r\n          <option value=\"2015\">2015</option>\r\n          <option value=\"2016\">2016</option>\r\n          <option value=\"2017\">2017</option>\r\n          <option value=\"2018\">2018</option>\r\n          <option value=\"2019\">2019</option>\r\n          <option value=\"2020\">2020</option>\r\n        </select>\r\n        <select\r\n          className=\"input\"\r\n          name=\"price\"\r\n          onChange={(e) => {\r\n            setPrice(e.target.value);\r\n          }}\r\n        >\r\n          <option>Faixa de Preço</option>\r\n          <option value=\"0\">De 0 á R$ 20.000</option>\r\n          <option value=\"20000\">De R$ 20.000 á R$ 39.999</option>\r\n          <option value=\"40000\">De R$ 40.000 á R$ 59.999</option>\r\n          <option value=\"60000\">De R$ 60.000 á R$ 79.999</option>\r\n          <option value=\"80000\">Mais de R$ 80.000</option>\r\n        </select>\r\n        <select className=\"input\" name=\"version\">\r\n          <option>Todas</option>\r\n          {version && (\r\n            <>\r\n              {version.map((versio) => {\r\n                return (\r\n                  <option value={versio.Name} key={versio.ID}>\r\n                    {versio.Name}\r\n                  </option>\r\n                );\r\n              })}\r\n            </>\r\n          )}\r\n        </select>\r\n        <button>Limpar Filtros</button>\r\n        <button\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            searchVehicle();\r\n          }}\r\n        >\r\n          Ver Ofertas\r\n        </button>\r\n      </form>\r\n      <div className=\"boxes\">\r\n        {f.map((vehicle) => {\r\n          return (\r\n            <div className=\"box\">\r\n              <p>Marca: {vehicle.Make}</p>\r\n              <p>Modelo: {vehicle.Model}</p>\r\n              <p>Versão: {vehicle.Version}</p>\r\n              <img src={vehicle.Image} />\r\n              <p>KM: {vehicle.KM}</p>\r\n              <p>Preço: {vehicle.Price}</p>\r\n              <p>\r\n                Ano: {vehicle.YearModel}/ {vehicle.YearFab}\r\n              </p>\r\n              <p>Cor: {vehicle.Color}</p>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nPage.getInitialProps = async () => {\r\n  const GetMakeCar = await MakeCar();\r\n  const GetVehiclesPage1 = await VehiclesPage1();\r\n  const GetVehiclesPage2 = await VehiclesPage2();\r\n  const GetVehiclesPage3 = await VehiclesPage3();\r\n  return {\r\n    GetMakeCar,\r\n    GetVehiclesPage1,\r\n    GetVehiclesPage2,\r\n    GetVehiclesPage3,\r\n  };\r\n};\r\n\r\nexport default Page;\r\n"]},"metadata":{},"sourceType":"module"}