{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar __jsx = React.createElement;\nimport Head from \"next/head\";\nimport React, { useState, useEffect } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Table from \"react-bootstrap/Table\";\nimport Header from \"../src/components/Header\";\nimport TableRecords from \"../src/components/TableRecords\";\nimport Posts from \"../src/services\";\n\nfunction Page(_ref) {\n  var posts = _ref.posts;\n\n  var _useState = useState(),\n      registros = _useState[0],\n      setRegistros = _useState[1];\n\n  console.log(posts, \" posts\"); // useEffect(() => {\n  //   fetch(\"https://jsonplaceholder.typicode.com/posts\")\n  //     .then((response) => response.json())\n  //     .then((json) => setRegistros(json));\n  // }, []);\n\n  return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"Seja bem vindo\")), __jsx(\"div\", {\n    className: \"container\"\n  }, __jsx(Header, {\n    Button: Button,\n    setRegistros: setRegistros\n  }), __jsx(TableRecords, {\n    registros: registros,\n    Table: Table,\n    Button: Button\n  }), !registros && __jsx(\"div\", null, \"Todos os registros foram apagados\")));\n}\n\nPage.getInitialProps = function _callee(_ref2) {\n  var query, listposts;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          query = _ref2.query;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(Posts());\n\n        case 3:\n          listposts = _context.sent;\n          return _context.abrupt(\"return\", {\n            posts: posts\n          });\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Page;","map":{"version":3,"sources":["C:/Users/Felipe Paulino/Documents/GitHub/Petz-listagem/pages/index.jsx"],"names":["Head","React","useState","useEffect","Button","Table","Header","TableRecords","Posts","Page","posts","registros","setRegistros","console","log","getInitialProps","query","listposts"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;;AAEA,SAASC,IAAT,OAAyB;AAAA,MAATC,KAAS,QAATA,KAAS;;AAAA,kBACWR,QAAQ,EADnB;AAAA,MAChBS,SADgB;AAAA,MACLC,YADK;;AAEvBC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ,EAAmB,QAAnB,EAFuB,CAGvB;AACA;AACA;AACA;AACA;;AACA,SACE,4BACE,MAAC,IAAD,QACE,sCADF,CADF,EAIE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE,MAAC,MAAD;AAAQ,IAAA,MAAM,EAAEN,MAAhB;AAAwB,IAAA,YAAY,EAAEQ;AAAtC,IADF,EAEE,MAAC,YAAD;AAAc,IAAA,SAAS,EAAED,SAAzB;AAAoC,IAAA,KAAK,EAAEN,KAA3C;AAAkD,IAAA,MAAM,EAAED;AAA1D,IAFF,EAGG,CAACO,SAAD,IAAc,uDAHjB,CAJF,CADF;AAYD;;AAEDF,IAAI,CAACM,eAAL,GAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,UAAAA,KAAT,SAASA,KAAT;AAAA;AAAA,2CACGR,KAAK,EADR;;AAAA;AACfS,UAAAA,SADe;AAAA,2CAGd;AACLP,YAAAA,KAAK,EAALA;AADK,WAHc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AAQA,eAAeD,IAAf","sourcesContent":["import Head from \"next/head\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport Header from \"../src/components/Header\";\r\nimport TableRecords from \"../src/components/TableRecords\";\r\nimport Posts from \"../src/services\";\r\n\r\nfunction Page({ posts }) {\r\n  const [registros, setRegistros] = useState();\r\n  console.log(posts, \" posts\");\r\n  // useEffect(() => {\r\n  //   fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n  //     .then((response) => response.json())\r\n  //     .then((json) => setRegistros(json));\r\n  // }, []);\r\n  return (\r\n    <>\r\n      <Head>\r\n        <title>Seja bem vindo</title>\r\n      </Head>\r\n      <div className=\"container\">\r\n        <Header Button={Button} setRegistros={setRegistros} />\r\n        <TableRecords registros={registros} Table={Table} Button={Button} />\r\n        {!registros && <div>Todos os registros foram apagados</div>}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nPage.getInitialProps = async ({ query }) => {\r\n  const listposts = await Posts();\r\n\r\n  return {\r\n    posts,\r\n  };\r\n};\r\n\r\nexport default Page;\r\n"]},"metadata":{},"sourceType":"module"}