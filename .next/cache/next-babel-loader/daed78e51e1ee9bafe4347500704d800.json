{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport fetch from \"isomorphic-unfetch\";\nimport { timeout } from \"../helpers/fetch\";\n\nfunction request(uri) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  console.log(\"Request on: \".concat(uri));\n  return timeout(options.timeout || 100000, fetch(uri, _objectSpread({}, options, {\n    headers: _objectSpread({}, options.headers)\n  })).then(function (res) {\n    if (!res.ok) throw res;\n    return res;\n  }));\n}\n\nexport default request;","map":null,"metadata":{},"sourceType":"module"}