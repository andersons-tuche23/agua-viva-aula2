{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { updateParameter } from \"../src/helpers/update\";\nimport { MakeCar, ModelMake, VersionModel, Vehicles } from \"../src/services/requests\";\n\nfunction Page({\n  GetMakeCar,\n  GetVehiclesPage1,\n  GetVehiclesPage2,\n  GetVehiclesPage3\n}) {\n  const {\n    0: modelId,\n    1: setModelId\n  } = useState();\n  const {\n    0: model,\n    1: listModel\n  } = useState();\n  const {\n    0: versionId,\n    1: setVersionId\n  } = useState();\n  const {\n    0: version,\n    1: listVersion\n  } = useState();\n\n  const readModel = async () => {\n    const GetModelMake = await ModelMake(modelId);\n    listModel(GetModelMake);\n  };\n\n  useEffect(() => {\n    readModel();\n  }, [modelId]);\n\n  const readVersion = async () => {\n    const GetVersionModel = await VersionModel(versionId);\n    listVersion(GetVersionModel);\n  };\n\n  useEffect(() => {\n    readVersion();\n  }, [versionId]);\n\n  const setAllVehicles = () => {\n    {\n      [...GetVehiclesPage1], [...GetVehiclesPage2], [...GetVehiclesPage3];\n    }\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"form\", null, __jsx(\"input\", {\n    name: \"locale\",\n    placeholder: \"Onde:\"\n  }), __jsx(\"select\", {\n    className: \"input\",\n    name: \"distance\"\n  }, __jsx(\"option\", {\n    placeholder: \"Raio:\"\n  })), __jsx(\"select\", {\n    className: \"input\",\n    name: \"make\",\n    onChange: e => {\n      setModelId(e.target.value);\n    }\n  }, __jsx(\"option\", null, \"Todas\"), GetMakeCar.map(make => {\n    return __jsx(\"option\", {\n      value: make.ID,\n      key: make.ID\n    }, make.Name);\n  })), __jsx(\"select\", {\n    className: \"input\",\n    name: \"model\",\n    onChange: e => {\n      setVersionId(e.target.value);\n    }\n  }, model && __jsx(React.Fragment, null, __jsx(\"option\", null, \"Todas\"), model.map(mode => {\n    return __jsx(\"option\", {\n      value: mode.ID,\n      key: mode.ID\n    }, mode.Name);\n  }))), __jsx(\"select\", {\n    className: \"input\",\n    name: \"year\"\n  }, __jsx(\"option\", null)), __jsx(\"select\", {\n    className: \"input\",\n    name: \"price\"\n  }, __jsx(\"option\", null)), __jsx(\"select\", {\n    className: \"input\",\n    name: \"version\"\n  }, version && __jsx(React.Fragment, null, __jsx(\"option\", null, \"Todas\"), version.map(versio => {\n    return __jsx(\"option\", {\n      value: versio.ID,\n      key: versio.ID\n    }, versio.Name);\n  })))));\n}\n\nPage.getInitialProps = async () => {\n  const GetMakeCar = await MakeCar();\n  const GetVehiclesPage1 = await VehiclesPage1();\n  const GetVehiclesPage2 = await VehiclesPage2();\n  const GetVehiclesPage3 = await VehiclesPage3();\n  return {\n    GetMakeCar,\n    GetVehiclesPage1,\n    GetVehiclesPage2,\n    GetVehiclesPage3\n  };\n};\n\nexport default Page;","map":{"version":3,"sources":["C:/Users/Felipe Paulino/Documents/GitHub/Web-Motors/pages/index.jsx"],"names":["React","useState","useEffect","updateParameter","MakeCar","ModelMake","VersionModel","Vehicles","Page","GetMakeCar","GetVehiclesPage1","GetVehiclesPage2","GetVehiclesPage3","modelId","setModelId","model","listModel","versionId","setVersionId","version","listVersion","readModel","GetModelMake","readVersion","GetVersionModel","setAllVehicles","e","target","value","map","make","ID","Name","mode","versio","getInitialProps","VehiclesPage1","VehiclesPage2","VehiclesPage3"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport { updateParameter } from \"../src/helpers/update\";\r\nimport {\r\n  MakeCar,\r\n  ModelMake,\r\n  VersionModel,\r\n  Vehicles,\r\n} from \"../src/services/requests\";\r\n\r\nfunction Page({\r\n  GetMakeCar,\r\n  GetVehiclesPage1,\r\n  GetVehiclesPage2,\r\n  GetVehiclesPage3,\r\n}) {\r\n  const [modelId, setModelId] = useState();\r\n  const [model, listModel] = useState();\r\n  const [versionId, setVersionId] = useState();\r\n  const [version, listVersion] = useState();\r\n  const readModel = async () => {\r\n    const GetModelMake = await ModelMake(modelId);\r\n    listModel(GetModelMake);\r\n  };\r\n  useEffect(() => {\r\n    readModel();\r\n  }, [modelId]);\r\n\r\n  const readVersion = async () => {\r\n    const GetVersionModel = await VersionModel(versionId);\r\n    listVersion(GetVersionModel);\r\n  };\r\n  useEffect(() => {\r\n    readVersion();\r\n  }, [versionId]);\r\n\r\n  const setAllVehicles = () => {\r\n    {\r\n      [...GetVehiclesPage1], [...GetVehiclesPage2], [...GetVehiclesPage3];\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <form>\r\n        <input name=\"locale\" placeholder=\"Onde:\"></input>\r\n        <select className=\"input\" name=\"distance\">\r\n          <option placeholder=\"Raio:\"></option>\r\n        </select>\r\n\r\n        <select\r\n          className=\"input\"\r\n          name=\"make\"\r\n          onChange={(e) => {\r\n            setModelId(e.target.value);\r\n          }}\r\n        >\r\n          <option>Todas</option>\r\n          {GetMakeCar.map((make) => {\r\n            return (\r\n              <option value={make.ID} key={make.ID}>\r\n                {make.Name}\r\n              </option>\r\n            );\r\n          })}\r\n        </select>\r\n        <select\r\n          className=\"input\"\r\n          name=\"model\"\r\n          onChange={(e) => {\r\n            setVersionId(e.target.value);\r\n          }}\r\n        >\r\n          {model && (\r\n            <>\r\n              <option>Todas</option>\r\n              {model.map((mode) => {\r\n                return (\r\n                  <option value={mode.ID} key={mode.ID}>\r\n                    {mode.Name}\r\n                  </option>\r\n                );\r\n              })}\r\n            </>\r\n          )}\r\n        </select>\r\n        <select className=\"input\" name=\"year\">\r\n          <option></option>\r\n        </select>\r\n        <select className=\"input\" name=\"price\">\r\n          <option></option>\r\n        </select>\r\n        <select className=\"input\" name=\"version\">\r\n          {version && (\r\n            <>\r\n              <option>Todas</option>\r\n              {version.map((versio) => {\r\n                return (\r\n                  <option value={versio.ID} key={versio.ID}>\r\n                    {versio.Name}\r\n                  </option>\r\n                );\r\n              })}\r\n            </>\r\n          )}\r\n        </select>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nPage.getInitialProps = async () => {\r\n  const GetMakeCar = await MakeCar();\r\n  const GetVehiclesPage1 = await VehiclesPage1();\r\n  const GetVehiclesPage2 = await VehiclesPage2();\r\n  const GetVehiclesPage3 = await VehiclesPage3();\r\n  return {\r\n    GetMakeCar,\r\n    GetVehiclesPage1,\r\n    GetVehiclesPage2,\r\n    GetVehiclesPage3,\r\n  };\r\n};\r\n\r\nexport default Page;\r\n"]},"metadata":{},"sourceType":"module"}