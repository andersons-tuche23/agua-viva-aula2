{"ast":null,"code":"var __jsx = React.createElement;\nimport Head from \"next/head\";\nimport React, { useState, useEffect } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Table from \"react-bootstrap/Table\";\nimport Header from \"../src/components/Header\";\nimport TableRecords from \"../src/components/TableRecords\";\n\nfunction Page() {\n  const {\n    0: registros,\n    1: setRegistros\n  } = useState();\n  const {\n    0: apagarRegistros,\n    1: setApagarRegistros\n  } = useState(false);\n  const {\n    0: filtrarRegistros,\n    1: setFiltraRegistros\n  } = useState(false);\n  useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/posts\").then(response => response.json()).then(json => setRegistros(json));\n  }, []);\n\n  function remove() {\n    setApagarRegistros(true);\n    fetch(\"https://jsonplaceholder.typicode.com/posts/1\", {\n      method: \"DELETE\"\n    }).then(response => response.json()).then(json => setRegistros(json)).then(json => setApagarRegistros(false));\n  }\n\n  function filtrar(value) {\n    if (value >= 1) {\n      setFiltraRegistros(true);\n      fetch(`https://jsonplaceholder.typicode.com/posts?userId=${value}`).then(response => response.json()).then(json => setRegistros(json)).then(json => setFiltraRegistros(json));\n    }\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"Seja bem vindo\")), __jsx(\"div\", {\n    className: \"container\"\n  }, __jsx(Header, {\n    apagarRegistros: apagarRegistros,\n    filtrarRegistros: filtrarRegistros,\n    Button: Button\n  }), __jsx(TableRecords, {\n    registros: registros,\n    Table: Table\n  }), !registros && __jsx(\"div\", null, \"Todos os registros foram apagados\")));\n}\n\nexport default Page;","map":{"version":3,"sources":["C:/Users/Felipe Paulino/Documents/TesteFront2/pages/index.jsx"],"names":["Head","React","useState","useEffect","Button","Table","Header","TableRecords","Page","registros","setRegistros","apagarRegistros","setApagarRegistros","filtrarRegistros","setFiltraRegistros","fetch","then","response","json","remove","method","filtrar","value"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;;AAEA,SAASC,IAAT,GAAgB;AACd,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA4BR,QAAQ,EAA1C;AACA,QAAM;AAAA,OAACS,eAAD;AAAA,OAAkBC;AAAlB,MAAwCV,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAM;AAAA,OAACW,gBAAD;AAAA,OAAmBC;AAAnB,MAAyCZ,QAAQ,CAAC,KAAD,CAAvD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESE,IAAD,IAAUR,YAAY,CAACQ,IAAD,CAF9B;AAGD,GAJQ,EAIN,EAJM,CAAT;;AAMA,WAASC,MAAT,GAAkB;AAChBP,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACAG,IAAAA,KAAK,CAAC,8CAAD,EAAiD;AACpDK,MAAAA,MAAM,EAAE;AAD4C,KAAjD,CAAL,CAGGJ,IAHH,CAGSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAHtB,EAIGF,IAJH,CAISE,IAAD,IAAUR,YAAY,CAACQ,IAAD,CAJ9B,EAKGF,IALH,CAKSE,IAAD,IAAUN,kBAAkB,CAAC,KAAD,CALpC;AAMD;;AAED,WAASS,OAAT,CAAiBC,KAAjB,EAAwB;AACtB,QAAIA,KAAK,IAAI,CAAb,EAAgB;AACdR,MAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACAC,MAAAA,KAAK,CAAE,qDAAoDO,KAAM,EAA5D,CAAL,CACGN,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESE,IAAD,IAAUR,YAAY,CAACQ,IAAD,CAF9B,EAGGF,IAHH,CAGSE,IAAD,IAAUJ,kBAAkB,CAACI,IAAD,CAHpC;AAID;AACF;;AAED,SACE,4BACE,MAAC,IAAD,QACE,sCADF,CADF,EAIE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE,MAAC,MAAD;AACE,IAAA,eAAe,EAAEP,eADnB;AAEE,IAAA,gBAAgB,EAAEE,gBAFpB;AAGE,IAAA,MAAM,EAAET;AAHV,IADF,EAME,MAAC,YAAD;AAAc,IAAA,SAAS,EAAEK,SAAzB;AAAoC,IAAA,KAAK,EAAEJ;AAA3C,IANF,EAOG,CAACI,SAAD,IAAc,uDAPjB,CAJF,CADF;AAgBD;;AAED,eAAeD,IAAf","sourcesContent":["import Head from \"next/head\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport Header from \"../src/components/Header\";\r\nimport TableRecords from \"../src/components/TableRecords\";\r\n\r\nfunction Page() {\r\n  const [registros, setRegistros] = useState();\r\n  const [apagarRegistros, setApagarRegistros] = useState(false);\r\n  const [filtrarRegistros, setFiltraRegistros] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n      .then((response) => response.json())\r\n      .then((json) => setRegistros(json));\r\n  }, []);\r\n\r\n  function remove() {\r\n    setApagarRegistros(true);\r\n    fetch(\"https://jsonplaceholder.typicode.com/posts/1\", {\r\n      method: \"DELETE\",\r\n    })\r\n      .then((response) => response.json())\r\n      .then((json) => setRegistros(json))\r\n      .then((json) => setApagarRegistros(false));\r\n  }\r\n\r\n  function filtrar(value) {\r\n    if (value >= 1) {\r\n      setFiltraRegistros(true);\r\n      fetch(`https://jsonplaceholder.typicode.com/posts?userId=${value}`)\r\n        .then((response) => response.json())\r\n        .then((json) => setRegistros(json))\r\n        .then((json) => setFiltraRegistros(json));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Head>\r\n        <title>Seja bem vindo</title>\r\n      </Head>\r\n      <div className=\"container\">\r\n        <Header\r\n          apagarRegistros={apagarRegistros}\r\n          filtrarRegistros={filtrarRegistros}\r\n          Button={Button}\r\n        />\r\n        <TableRecords registros={registros} Table={Table} />\r\n        {!registros && <div>Todos os registros foram apagados</div>}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Page;\r\n"]},"metadata":{},"sourceType":"module"}