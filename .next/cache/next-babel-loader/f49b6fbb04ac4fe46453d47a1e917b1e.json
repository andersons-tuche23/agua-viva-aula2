{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar __jsx = React.createElement;\nimport Head from \"next/head\";\nimport React, { useState, useEffect } from \"react\";\nimport TableRecords from \"../src/components/TableRecords\";\nimport { Posts, Filtrar } from \"../src/services/requests\";\nimport { updateParameter } from \"../src/helpers/update\";\nimport Logo from \"../src/components/Logo\";\nimport Axios from \"axios\";\n\nfunction Page(_ref) {\n  var registros = _ref.registros,\n      filtrar = _ref.filtrar,\n      query = _ref.query;\n  var url = \"https://aguaviva-rp.firebaseio.com/movimentacoes.json\";\n\n  function teste() {\n    useEffect(function () {\n      Axios.get(url).then(function (res) {\n        console.log(res);\n      });\n    }, []);\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", null, \"teste\"));\n}\n\nPage.getInitialProps = function _callee(_ref2) {\n  var query, filtrar, registros;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          query = _ref2.query;\n          filtrar = [];\n\n          if (!query.filtro) {\n            _context.next = 6;\n            break;\n          }\n\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(Filtrar(query.filtro));\n\n        case 5:\n          filtrar = _context.sent;\n\n        case 6:\n          _context.next = 8;\n          return _regeneratorRuntime.awrap(Posts());\n\n        case 8:\n          registros = _context.sent;\n          return _context.abrupt(\"return\", {\n            registros: registros,\n            filtrar: filtrar,\n            query: query\n          });\n\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Page;","map":{"version":3,"sources":["C:/Users/Felipe Paulino/Documents/GitHub/Petz-listagem/pages/index.jsx"],"names":["Head","React","useState","useEffect","TableRecords","Posts","Filtrar","updateParameter","Logo","Axios","Page","registros","filtrar","query","url","teste","get","then","res","console","log","getInitialProps","filtro"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,SAASC,KAAT,EAAgBC,OAAhB,QAA+B,0BAA/B;AACA,SAASC,eAAT,QAAgC,uBAAhC;AAEA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,IAAT,OAA6C;AAAA,MAA7BC,SAA6B,QAA7BA,SAA6B;AAAA,MAAlBC,OAAkB,QAAlBA,OAAkB;AAAA,MAATC,KAAS,QAATA,KAAS;AAC3C,MAAMC,GAAG,GAAG,uDAAZ;;AAEA,WAASC,KAAT,GAAiB;AACfZ,IAAAA,SAAS,CAAC,YAAM;AACdM,MAAAA,KAAK,CAACO,GAAN,CAAUF,GAAV,EAAeG,IAAf,CAAoB,UAACC,GAAD,EAAS;AAC3BC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,OAFD;AAGD,KAJQ,EAIN,EAJM,CAAT;AAKD;;AACD,SACE,4BACE,2BADF,CADF;AAKD;;AAEDR,IAAI,CAACW,eAAL,GAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAASR,UAAAA,KAAT,SAASA,KAAT;AACjBD,UAAAA,OADiB,GACP,EADO;;AAAA,eAEjBC,KAAK,CAACS,MAFW;AAAA;AAAA;AAAA;;AAAA;AAAA,2CAGHhB,OAAO,CAACO,KAAK,CAACS,MAAP,CAHJ;;AAAA;AAGnBV,UAAAA,OAHmB;;AAAA;AAAA;AAAA,2CAKGP,KAAK,EALR;;AAAA;AAKfM,UAAAA,SALe;AAAA,2CAMd;AACLA,YAAAA,SAAS,EAATA,SADK;AAELC,YAAAA,OAAO,EAAPA,OAFK;AAGLC,YAAAA,KAAK,EAALA;AAHK,WANc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AAaA,eAAeH,IAAf","sourcesContent":["import Head from \"next/head\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport TableRecords from \"../src/components/TableRecords\";\r\nimport { Posts, Filtrar } from \"../src/services/requests\";\r\nimport { updateParameter } from \"../src/helpers/update\";\r\n\r\nimport Logo from \"../src/components/Logo\";\r\nimport Axios from \"axios\";\r\n\r\nfunction Page({ registros, filtrar, query }) {\r\n  const url = \"https://aguaviva-rp.firebaseio.com/movimentacoes.json\";\r\n\r\n  function teste() {\r\n    useEffect(() => {\r\n      Axios.get(url).then((res) => {\r\n        console.log(res);\r\n      });\r\n    }, []);\r\n  }\r\n  return (\r\n    <>\r\n      <div>teste</div>\r\n    </>\r\n  );\r\n}\r\n\r\nPage.getInitialProps = async ({ query }) => {\r\n  let filtrar = [];\r\n  if (query.filtro) {\r\n    filtrar = await Filtrar(query.filtro);\r\n  }\r\n  const registros = await Posts();\r\n  return {\r\n    registros,\r\n    filtrar,\r\n    query,\r\n  };\r\n};\r\n\r\nexport default Page;\r\n"]},"metadata":{},"sourceType":"module"}