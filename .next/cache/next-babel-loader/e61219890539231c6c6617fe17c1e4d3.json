{"ast":null,"code":"var __jsx = React.createElement;\nimport Head from \"next/head\";\nimport React, { useState, useEffect } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport Table from \"react-bootstrap/Table\";\n\nfunction Page() {\n  const {\n    0: registros,\n    1: setRegistros\n  } = useState();\n  const {\n    0: apagarRegistros,\n    1: setApagarRegistros\n  } = useState(false);\n  const {\n    0: filtrarRegistros,\n    1: setFiltraRegistros\n  } = useState(false);\n  console.log(registros);\n  useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/posts\").then(response => response.json()).then(json => setRegistros(json));\n  }, []);\n\n  function remove() {\n    setApagarRegistros(true);\n    fetch(\"https://jsonplaceholder.typicode.com/posts/1\", {\n      method: \"DELETE\"\n    }).then(response => response.json()).then(json => setRegistros(json)).then(json => setApagarRegistros(false));\n  }\n\n  function filtrar(value) {\n    if (value >= 1) {\n      setFiltraRegistros(true);\n      fetch(`https://jsonplaceholder.typicode.com/posts?userId=${value}`).then(response => response.json()).then(json => setRegistros(json)).then(json => setFiltraRegistros(json));\n    }\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"Seja bem vindo\")), __jsx(\"div\", {\n    className: \"container\"\n  }, __jsx(\"header\", {\n    className: \"header\"\n  }, __jsx(\"img\", {\n    className: \"logo\",\n    src: \"/images/logo.png\",\n    alt: \"petz\"\n  }), apagarRegistros && __jsx(\"p\", null, \"Apagando...\"), filtrarRegistros && __jsx(\"p\", null, \"Filtrando...\"), __jsx(\"div\", {\n    className: \"filtros\"\n  }, __jsx(Form.Group, {\n    className: \"select\"\n  }, __jsx(Form.Label, null, \"Filtrar:\"), __jsx(Form.Control, {\n    as: \"select\",\n    value: \"Choose...\",\n    onChange: e => {\n      filtrar(e.target.value);\n    }\n  }, __jsx(\"option\", null, \"Selecione\"), __jsx(\"option\", {\n    value: \"1\"\n  }, \" 1 ao 10\"), __jsx(\"option\", {\n    value: \"2\"\n  }, \" 11 ao 20\"))), __jsx(Button, {\n    variant: \"danger\",\n    onClick: () => {\n      remove();\n    }\n  }, \"Apagar todos os registros\"))), (registros === null || registros === void 0 ? void 0 : registros.length) >= 1 && __jsx(Table, {\n    striped: true,\n    bordered: true,\n    hover: true\n  }, __jsx(\"thead\", null, __jsx(\"tr\", null, __jsx(\"th\", null, \"#\"), __jsx(\"th\", null, \"Titulo\"), __jsx(\"th\", null, \"Detalhes\"))), __jsx(\"tbody\", null, registros.map(registro => {\n    return __jsx(\"tr\", null, __jsx(\"td\", null, registro.id), __jsx(\"td\", null, registro.title), __jsx(\"td\", null, \" \", __jsx(Button, {\n      href: `${registro.id}`\n    }, \"Visualizar\")));\n  }))), !registros && __jsx(\"div\", null, \"Todos os registros foram apagados\")));\n}\n\nexport default Page;","map":{"version":3,"sources":["C:/Users/Felipe Paulino/Documents/TesteFront2/pages/index.jsx"],"names":["Head","React","useState","useEffect","Button","Form","Table","Page","registros","setRegistros","apagarRegistros","setApagarRegistros","filtrarRegistros","setFiltraRegistros","console","log","fetch","then","response","json","remove","method","filtrar","value","e","target","length","map","registro","id","title"],"mappings":"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","sourcesContent":["import Head from \"next/head\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Table from \"react-bootstrap/Table\";\r\n\r\nfunction Page() {\r\n  const [registros, setRegistros] = useState();\r\n  const [apagarRegistros, setApagarRegistros] = useState(false);\r\n  const [filtrarRegistros, setFiltraRegistros] = useState(false);\r\n  console.log(registros);\r\n  useEffect(() => {\r\n    fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n      .then((response) => response.json())\r\n      .then((json) => setRegistros(json));\r\n  }, []);\r\n\r\n  function remove() {\r\n    setApagarRegistros(true);\r\n    fetch(\"https://jsonplaceholder.typicode.com/posts/1\", {\r\n      method: \"DELETE\",\r\n    })\r\n      .then((response) => response.json())\r\n      .then((json) => setRegistros(json))\r\n      .then((json) => setApagarRegistros(false));\r\n  }\r\n\r\n  function filtrar(value) {\r\n    if (value >= 1) {\r\n      setFiltraRegistros(true);\r\n      fetch(`https://jsonplaceholder.typicode.com/posts?userId=${value}`)\r\n        .then((response) => response.json())\r\n        .then((json) => setRegistros(json))\r\n        .then((json) => setFiltraRegistros(json));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Head>\r\n        <title>Seja bem vindo</title>\r\n      </Head>\r\n      <div className=\"container\">\r\n        <header className=\"header\">\r\n          <img className=\"logo\" src=\"/images/logo.png\" alt=\"petz\" />\r\n          {apagarRegistros && <p>Apagando...</p>}\r\n          {filtrarRegistros && <p>Filtrando...</p>}\r\n          <div className=\"filtros\">\r\n            <Form.Group className=\"select\">\r\n              <Form.Label>Filtrar:</Form.Label>\r\n              <Form.Control\r\n                as=\"select\"\r\n                value=\"Choose...\"\r\n                onChange={(e) => {\r\n                  filtrar(e.target.value);\r\n                }}\r\n              >\r\n                <option>Selecione</option>\r\n                <option value=\"1\"> 1 ao 10</option>\r\n                <option value=\"2\"> 11 ao 20</option>\r\n              </Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button\r\n              variant=\"danger\"\r\n              onClick={() => {\r\n                remove();\r\n              }}\r\n            >\r\n              Apagar todos os registros\r\n            </Button>\r\n          </div>\r\n        </header>\r\n        {registros?.length >= 1 && (\r\n          <Table striped bordered hover>\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Titulo</th>\r\n                <th>Detalhes</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n              {registros.map((registro) => {\r\n                return (\r\n                  <tr>\r\n                    <td>{registro.id}</td>\r\n                    <td>{registro.title}</td>\r\n                    <td>\r\n                      {\" \"}\r\n                      <Button href={`${registro.id}`}>Visualizar</Button>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n        {!registros && <div>Todos os registros foram apagados</div>}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Page;\r\n"]},"metadata":{},"sourceType":"module"}