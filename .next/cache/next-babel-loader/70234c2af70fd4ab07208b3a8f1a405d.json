{"ast":null,"code":"import request from \"./request\";\nexport function Posts() {\n  return request(\"https://jsonplaceholder.typicode.com/posts\").then(function (res) {\n    return res.json();\n  })[\"catch\"](function (err) {\n    throw err;\n  });\n}\nexport function Filtrar(value) {\n  return request(\"https://jsonplaceholder.typicode.com/posts?userId=\".concat(value)).then(function (res) {\n    return res.json();\n  })[\"catch\"](function (err) {\n    throw err;\n  });\n}\nexport function Remover() {\n  return request(\"https://jsonplaceholder.typicode.com/posts/1\").then(function (res) {\n    return res.json();\n  })[\"catch\"](function (err) {\n    throw err;\n  });\n}","map":{"version":3,"sources":["C:/Users/Felipe Paulino/Documents/GitHub/Petz-listagem/src/services/requests.js"],"names":["request","Posts","then","res","json","err","Filtrar","value","Remover"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,WAApB;AAEA,OAAO,SAASC,KAAT,GAAiB;AACtB,SAAOD,OAAO,8CAAP,CACJE,IADI,CACC,UAACC,GAAD;AAAA,WAASA,GAAG,CAACC,IAAJ,EAAT;AAAA,GADD,WAEE,UAACC,GAAD,EAAS;AACd,UAAMA,GAAN;AACD,GAJI,CAAP;AAKD;AACD,OAAO,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAC7B,SAAOP,OAAO,6DAAsDO,KAAtD,EAAP,CACJL,IADI,CACC,UAACC,GAAD;AAAA,WAASA,GAAG,CAACC,IAAJ,EAAT;AAAA,GADD,WAEE,UAACC,GAAD,EAAS;AACd,UAAMA,GAAN;AACD,GAJI,CAAP;AAKD;AACD,OAAO,SAASG,OAAT,GAAmB;AACxB,SAAOR,OAAO,gDAAP,CACJE,IADI,CACC,UAACC,GAAD;AAAA,WAASA,GAAG,CAACC,IAAJ,EAAT;AAAA,GADD,WAEE,UAACC,GAAD,EAAS;AACd,UAAMA,GAAN;AACD,GAJI,CAAP;AAKD","sourcesContent":["import request from \"./request\";\r\n\r\nexport function Posts() {\r\n  return request(`https://jsonplaceholder.typicode.com/posts`)\r\n    .then((res) => res.json())\r\n    .catch((err) => {\r\n      throw err;\r\n    });\r\n}\r\nexport function Filtrar(value) {\r\n  return request(`https://jsonplaceholder.typicode.com/posts?userId=${value}`)\r\n    .then((res) => res.json())\r\n    .catch((err) => {\r\n      throw err;\r\n    });\r\n}\r\nexport function Remover() {\r\n  return request(`https://jsonplaceholder.typicode.com/posts/1`)\r\n    .then((res) => res.json())\r\n    .catch((err) => {\r\n      throw err;\r\n    });\r\n}\r\n"]},"metadata":{},"sourceType":"module"}