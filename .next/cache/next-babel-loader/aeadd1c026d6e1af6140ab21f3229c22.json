{"ast":null,"code":"export const updateParameter = (uri = '/', key, value) => {\n  const hasQueries = uri.includes('?');\n  const hasHash = uri.includes('#');\n  let hash = '';\n\n  if (hasHash) {\n    hash = uri.substr(uri.indexOf('#'));\n    uri = uri.substr(0, uri.indexOf('#'));\n  }\n\n  let queries = '';\n\n  if (hasQueries) {\n    queries = uri.split('?');\n    queries = queries[1];\n    uri = uri.substr(0, uri.indexOf('?'));\n    const parsedQueries = queries.split('&');\n    const updatedQueries = [];\n    let hasCurrentQuery;\n    parsedQueries.forEach(parsedQuery => {\n      const [parsedKey, parsedValue] = parsedQuery.split('=');\n\n      if (parsedKey === key) {\n        if (value) {\n          hasCurrentQuery = true;\n          return updatedQueries.push(`${key}=${value}`);\n        }\n\n        return;\n      }\n\n      if (parsedValue) {\n        updatedQueries.push(`${parsedKey}=${parsedValue}`);\n      }\n    });\n\n    if (!hasCurrentQuery) {\n      if (value) {\n        updatedQueries.push(`${key}=${value}`);\n      }\n    }\n\n    if (updatedQueries.length) {\n      queries = '?' + updatedQueries.join('&');\n    } else {\n      queries = '';\n    }\n  } else {\n    if (value) {\n      queries = `?${key}=${value}`;\n    }\n  }\n\n  return uri + queries + hash;\n};\nexport const getParameter = (uri, key) => {\n  const [, parametersAndHash] = uri.split('?');\n\n  if (parametersAndHash) {\n    const [parameters] = parametersAndHash.split('#');\n    const parametersObject = {};\n    parameters.split('&').forEach(parameter => {\n      const [currentKey, currentValue] = parameter.split('=');\n      parametersObject[currentKey] = currentValue;\n    });\n    return parametersObject[key];\n  }\n\n  return null;\n};","map":null,"metadata":{},"sourceType":"module"}