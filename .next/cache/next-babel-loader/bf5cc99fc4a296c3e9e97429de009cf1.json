{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { updateParameter } from \"../src/helpers/update\";\nimport { MakeCar, ModelMake, VersionModel, Vehicles } from \"../src/services/requests\";\n\nfunction Page(_ref) {\n  var GetMakeCar = _ref.GetMakeCar;\n\n  var _useState = useState(),\n      modelId = _useState[0],\n      setModelId = _useState[1];\n\n  var _useState2 = useState(),\n      model = _useState2[0],\n      listModel = _useState2[1];\n\n  var _useState3 = useState(),\n      versionId = _useState3[0],\n      setVersionId = _useState3[1];\n\n  var _useState4 = useState(),\n      version = _useState4[0],\n      listVersion = _useState4[1];\n\n  var readModel = function readModel() {\n    var GetModelMake;\n    return _regeneratorRuntime.async(function readModel$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(ModelMake(modelId));\n\n          case 2:\n            GetModelMake = _context.sent;\n            listModel(GetModelMake);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    readModel();\n  }, [modelId]);\n\n  var readVersion = function readVersion() {\n    var GetVersionModel;\n    return _regeneratorRuntime.async(function readVersion$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(VersionModel(versionId));\n\n          case 2:\n            GetVersionModel = _context2.sent;\n            listVersion(GetVersionModel);\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    readVersion();\n  }, [versionId]);\n  return __jsx(React.Fragment, null, __jsx(\"form\", null, __jsx(\"input\", null), __jsx(\"select\", {\n    className: \"input\",\n    name: \"grade_group\"\n  }, __jsx(\"option\", null)), __jsx(\"select\", {\n    className: \"input\",\n    name: \"grade_group\"\n  }, __jsx(\"option\", null)), __jsx(\"select\", {\n    className: \"input\",\n    name: \"grade_group \",\n    onChange: function onChange(e) {\n      setModelId(e.target.value);\n    }\n  }, __jsx(\"option\", null, \"Todas\"), GetMakeCar.map(function (make) {\n    return __jsx(\"option\", {\n      value: make.ID\n    }, make.Name);\n  })), __jsx(\"select\", {\n    className: \"input\",\n    name: \"grade_group\",\n    onChange: function onChange(e) {\n      setModelId(e.target.value);\n    }\n  }, model && __jsx(React.Fragment, null, model.map(function (make) {\n    return __jsx(\"option\", {\n      value: make.ID\n    }, make.Name);\n  }))), __jsx(\"select\", {\n    className: \"input\",\n    name: \"grade_group\"\n  }, __jsx(\"option\", null)), __jsx(\"select\", {\n    className: \"input\",\n    name: \"grade_group\"\n  }, __jsx(\"option\", null))));\n}\n\nPage.getInitialProps = function _callee() {\n  var GetMakeCar;\n  return _regeneratorRuntime.async(function _callee$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return _regeneratorRuntime.awrap(MakeCar());\n\n        case 2:\n          GetMakeCar = _context3.sent;\n          return _context3.abrupt(\"return\", {\n            GetMakeCar: GetMakeCar\n          });\n\n        case 4:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Page;","map":{"version":3,"sources":["C:/Users/Felipe Paulino/Documents/GitHub/Web-Motors/pages/index.jsx"],"names":["React","useState","useEffect","updateParameter","MakeCar","ModelMake","VersionModel","Vehicles","Page","GetMakeCar","modelId","setModelId","model","listModel","versionId","setVersionId","version","listVersion","readModel","GetModelMake","readVersion","GetVersionModel","e","target","value","map","make","ID","Name","getInitialProps"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,SAASC,eAAT,QAAgC,uBAAhC;AACA,SACEC,OADF,EAEEC,SAFF,EAGEC,YAHF,EAIEC,QAJF,QAKO,0BALP;;AAOA,SAASC,IAAT,OAA8B;AAAA,MAAdC,UAAc,QAAdA,UAAc;;AAAA,kBACER,QAAQ,EADV;AAAA,MACrBS,OADqB;AAAA,MACZC,UADY;;AAAA,mBAEDV,QAAQ,EAFP;AAAA,MAErBW,KAFqB;AAAA,MAEdC,SAFc;;AAAA,mBAGMZ,QAAQ,EAHd;AAAA,MAGrBa,SAHqB;AAAA,MAGVC,YAHU;;AAAA,mBAIGd,QAAQ,EAJX;AAAA,MAIrBe,OAJqB;AAAA,MAIZC,WAJY;;AAK5B,MAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACWb,SAAS,CAACK,OAAD,CADpB;;AAAA;AACVS,YAAAA,YADU;AAEhBN,YAAAA,SAAS,CAACM,YAAD,CAAT;;AAFgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAIAjB,EAAAA,SAAS,CAAC,YAAM;AACdgB,IAAAA,SAAS;AACV,GAFQ,EAEN,CAACR,OAAD,CAFM,CAAT;;AAIA,MAAMU,WAAW,GAAG,SAAdA,WAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACYd,YAAY,CAACQ,SAAD,CADxB;;AAAA;AACZO,YAAAA,eADY;AAElBJ,YAAAA,WAAW,CAACI,eAAD,CAAX;;AAFkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApB;;AAIAnB,EAAAA,SAAS,CAAC,YAAM;AACdkB,IAAAA,WAAW;AACZ,GAFQ,EAEN,CAACN,SAAD,CAFM,CAAT;AAIA,SACE,4BACE,oBACE,oBADF,EAEE;AAAQ,IAAA,SAAS,EAAC,OAAlB;AAA0B,IAAA,IAAI,EAAC;AAA/B,KACE,qBADF,CAFF,EAKE;AAAQ,IAAA,SAAS,EAAC,OAAlB;AAA0B,IAAA,IAAI,EAAC;AAA/B,KACE,qBADF,CALF,EASE;AACE,IAAA,SAAS,EAAC,OADZ;AAEE,IAAA,IAAI,EAAC,cAFP;AAGE,IAAA,QAAQ,EAAE,kBAACQ,CAAD,EAAO;AACfX,MAAAA,UAAU,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV;AACD;AALH,KAOE,8BAPF,EAQGf,UAAU,CAACgB,GAAX,CAAe,UAACC,IAAD,EAAU;AACxB,WAAO;AAAQ,MAAA,KAAK,EAAEA,IAAI,CAACC;AAApB,OAAyBD,IAAI,CAACE,IAA9B,CAAP;AACD,GAFA,CARH,CATF,EAqBE;AACE,IAAA,SAAS,EAAC,OADZ;AAEE,IAAA,IAAI,EAAC,aAFP;AAGE,IAAA,QAAQ,EAAE,kBAACN,CAAD,EAAO;AACfX,MAAAA,UAAU,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV;AACD;AALH,KAOGZ,KAAK,IACJ,4BACGA,KAAK,CAACa,GAAN,CAAU,UAACC,IAAD,EAAU;AACnB,WAAO;AAAQ,MAAA,KAAK,EAAEA,IAAI,CAACC;AAApB,OAAyBD,IAAI,CAACE,IAA9B,CAAP;AACD,GAFA,CADH,CARJ,CArBF,EAoCE;AAAQ,IAAA,SAAS,EAAC,OAAlB;AAA0B,IAAA,IAAI,EAAC;AAA/B,KACE,qBADF,CApCF,EAuCE;AAAQ,IAAA,SAAS,EAAC,OAAlB;AAA0B,IAAA,IAAI,EAAC;AAA/B,KACE,qBADF,CAvCF,CADF,CADF;AA+CD;;AAEDpB,IAAI,CAACqB,eAAL,GAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACIzB,OAAO,EADX;;AAAA;AACfK,UAAAA,UADe;AAAA,4CAEd;AACLA,YAAAA,UAAU,EAAVA;AADK,WAFc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AAOA,eAAeD,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport { updateParameter } from \"../src/helpers/update\";\r\nimport {\r\n  MakeCar,\r\n  ModelMake,\r\n  VersionModel,\r\n  Vehicles,\r\n} from \"../src/services/requests\";\r\n\r\nfunction Page({ GetMakeCar }) {\r\n  const [modelId, setModelId] = useState();\r\n  const [model, listModel] = useState();\r\n  const [versionId, setVersionId] = useState();\r\n  const [version, listVersion] = useState();\r\n  const readModel = async () => {\r\n    const GetModelMake = await ModelMake(modelId);\r\n    listModel(GetModelMake);\r\n  };\r\n  useEffect(() => {\r\n    readModel();\r\n  }, [modelId]);\r\n\r\n  const readVersion = async () => {\r\n    const GetVersionModel = await VersionModel(versionId);\r\n    listVersion(GetVersionModel);\r\n  };\r\n  useEffect(() => {\r\n    readVersion();\r\n  }, [versionId]);\r\n\r\n  return (\r\n    <>\r\n      <form>\r\n        <input></input>\r\n        <select className=\"input\" name=\"grade_group\">\r\n          <option></option>\r\n        </select>\r\n        <select className=\"input\" name=\"grade_group\">\r\n          <option></option>\r\n        </select>\r\n\r\n        <select\r\n          className=\"input\"\r\n          name=\"grade_group \"\r\n          onChange={(e) => {\r\n            setModelId(e.target.value);\r\n          }}\r\n        >\r\n          <option>Todas</option>\r\n          {GetMakeCar.map((make) => {\r\n            return <option value={make.ID}>{make.Name}</option>;\r\n          })}\r\n        </select>\r\n        <select\r\n          className=\"input\"\r\n          name=\"grade_group\"\r\n          onChange={(e) => {\r\n            setModelId(e.target.value);\r\n          }}\r\n        >\r\n          {model && (\r\n            <>\r\n              {model.map((make) => {\r\n                return <option value={make.ID}>{make.Name}</option>;\r\n              })}\r\n            </>\r\n          )}\r\n        </select>\r\n        <select className=\"input\" name=\"grade_group\">\r\n          <option></option>\r\n        </select>\r\n        <select className=\"input\" name=\"grade_group\">\r\n          <option></option>\r\n        </select>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nPage.getInitialProps = async () => {\r\n  const GetMakeCar = await MakeCar();\r\n  return {\r\n    GetMakeCar,\r\n  };\r\n};\r\n\r\nexport default Page;\r\n"]},"metadata":{},"sourceType":"module"}