{"ast":null,"code":"var __jsx = React.createElement;\nimport Head from \"next/head\";\nimport React, { useState, useEffect } from \"react\";\nimport ReactGA from \"react-ga\";\nimport Axios from \"axios\";\n\nfunction Page() {\n  function initialGA() {\n    ReactGA.initialize(\"UA-170909874-1\");\n    ReactGA.pageview(urlLocal);\n  }\n\n  let urlLocal;\n\n  if (false) {\n    var _window$location;\n\n    urlLocal = (_window$location = window.location) === null || _window$location === void 0 ? void 0 : _window$location.href;\n  }\n\n  initialGA();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(true);\n  const {\n    0: data,\n    1: setData\n  } = useState();\n  const {\n    0: orderListagem,\n    1: setOrderListagem\n  } = useState();\n  const {\n    0: listagem,\n    1: setListagem\n  } = useState(\"todos\");\n  const url = \"https://aguaviva-rp.firebaseio.com/teste.json\";\n  var date = new Date();\n  var dia_sem = date.getDay();\n\n  function compared(a, b) {\n    if (a.nome < b.nome) return -1;\n    if (a.nome > b.nome) return 1;\n    return 0;\n  }\n\n  useEffect(() => {\n    if (data) {\n      var array = Object.values(data);\n      const arrayList = array.sort(compared);\n      setOrderListagem(arrayList);\n    }\n  }, [data]);\n  useEffect(() => {// if (data) {\n    //   if (dia_sem >= 1 && dia_sem <= 3) {\n    //     Object.entries(data).map((individuo) => {\n    //       if (individuo[0] != \"base\") {\n    //         doRemove(individuo[0]);\n    //       }\n    //     });\n    //   }\n    // }\n  }, [data]);\n\n  const doRemove = id => {\n    remove(`https://aguaviva-rp.firebaseio.com/teste/${id}.json`);\n  };\n\n  const remove = url => {\n    Axios.delete(url).then(() => {\n      console.log(`você deletou ${url}`);\n    });\n  };\n\n  useEffect(() => {\n    setLoading(true);\n    Axios.get(url).then(res => {\n      setData(res.data);\n      setLoading(false);\n    });\n  }, []);\n\n  const doEdit = id => {\n    edit(`https://aguaviva-rp.firebaseio.com/teste/${id}.json`);\n  };\n\n  const edit = url => {\n    Axios.put(url).then(() => {\n      console.log(`você deletou ${url}`);\n    });\n  };\n\n  const post = data => {\n    Axios.post(url, data).then(res => {\n      setNomeLimpar(!nomeLimpar);\n      setSobrenomeLimpar(!sobrenomeLimpar);\n      setRedeLimpar(!redeLimpar);\n      alert(\"você confirmou sua presença no culto\");\n      window.location = \"/listagem.html\";\n    });\n  };\n\n  const salve = () => {\n    put({\n      status: true\n    });\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"Igreja Batista \\xC1gua Viva - Ribeir\\xE3o Pires\")), __jsx(\"div\", {\n    className: \"container\"\n  }, __jsx(\"div\", {\n    className: \"header\"\n  }, __jsx(\"img\", {\n    src: \"/images/logo.jpg\"\n  }), __jsx(\"h1\", null, \"Listagem de controle de presen\\xE7a no culto\")), data && __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"select\"\n  }, __jsx(\"label\", null, \"Selecione a listagem do culto que deseja ver\"), __jsx(\"select\", {\n    onChange: e => {\n      setListagem(e.target.value);\n    }\n  }, __jsx(\"option\", {\n    value: \"todos\"\n  }, \"Todos\"), __jsx(\"option\", {\n    value: \"sabado\"\n  }, \"Sabado - 19hs\"), __jsx(\"option\", {\n    value: \"manha\"\n  }, \"Domingo - 9hs\"), __jsx(\"option\", {\n    value: \"noite\"\n  }, \"Domingo - 18hs\"))), listagem == \"sabado\" && __jsx(React.Fragment, null, __jsx(\"h1\", null, \"Sabado - 19hs\"), __jsx(\"table\", null, __jsx(\"thead\", null, __jsx(\"tr\", null, __jsx(\"th\", null, \"Nome\"), __jsx(\"th\", null, \"Rede\"), __jsx(\"th\", null, \"Status\"))), __jsx(\"tbody\", null, orderListagem && __jsx(React.Fragment, null, orderListagem.map(individuo => {\n    if (individuo.culto == \"sabado\") {\n      return __jsx(\"tr\", {\n        key: individuo\n      }, __jsx(\"td\", null, individuo.nome, \" \", individuo.sobrenome), __jsx(\"td\", null, \"Pr \", individuo.rede));\n    }\n  }))))), listagem == \"manha\" && __jsx(React.Fragment, null, __jsx(\"h1\", null, \"Domingo - 9hs\"), __jsx(\"table\", null, __jsx(\"thead\", null, __jsx(\"tr\", null, __jsx(\"th\", null, \"Nome\"), __jsx(\"th\", null, \"Rede\"), __jsx(\"th\", null, \"Status\"))), __jsx(\"tbody\", null, orderListagem && __jsx(React.Fragment, null, orderListagem.map(individuo => {\n    if (individuo.culto == \"manha\") {\n      return __jsx(\"tr\", {\n        key: individuo\n      }, __jsx(\"td\", null, individuo.nome, \" \", individuo.sobrenome), __jsx(\"td\", null, \"Pr \", individuo.rede));\n    }\n  }))))), listagem == \"noite\" && __jsx(React.Fragment, null, __jsx(\"h1\", null, \"Domingo - 18hs\"), __jsx(\"table\", null, __jsx(\"thead\", null, __jsx(\"tr\", null, __jsx(\"th\", null, \"Nome\"), __jsx(\"th\", null, \"Rede\"), __jsx(\"th\", null, \"Status\"))), __jsx(\"tbody\", null, orderListagem && __jsx(React.Fragment, null, orderListagem.map(individuo => {\n    if (individuo.culto == \"noite\") {\n      return __jsx(\"tr\", {\n        key: individuo\n      }, __jsx(\"td\", null, individuo.nome, \" \", individuo.sobrenome), __jsx(\"td\", null, \"Pr \", individuo.rede));\n    }\n  }))))), listagem == \"todos\" && __jsx(React.Fragment, null, __jsx(\"h1\", null, \"Sabado - 19hs\"), __jsx(\"table\", null, __jsx(\"thead\", null, __jsx(\"tr\", null, __jsx(\"th\", null, \"Nome\"), __jsx(\"th\", null, \"Rede\"), __jsx(\"th\", null, \"Status\"))), __jsx(\"tbody\", null, orderListagem && __jsx(React.Fragment, null, orderListagem.map(individuo => {\n    if (individuo.culto == \"sabado\") {\n      return __jsx(\"tr\", {\n        key: individuo\n      }, __jsx(\"td\", null, individuo.nome, \" \", individuo.sobrenome), __jsx(\"td\", null, \"Pr \", individuo.rede));\n    }\n  })))), __jsx(\"h1\", null, \"Domingo - 9hs\"), __jsx(\"table\", null, __jsx(\"thead\", null, __jsx(\"tr\", null, __jsx(\"th\", null, \"Nome\"), __jsx(\"th\", null, \"Rede\"), __jsx(\"th\", null, \"Status\"))), __jsx(\"tbody\", null, orderListagem && __jsx(React.Fragment, null, orderListagem.map(individuo => {\n    if (individuo.culto == \"manha\") {\n      return __jsx(\"tr\", {\n        key: individuo\n      }, __jsx(\"td\", null, individuo.nome, \" \", individuo.sobrenome), __jsx(\"td\", null, \"Pr \", individuo.rede), __jsx(\"td\", null, \"Click\"));\n    }\n  })))), __jsx(\"h1\", null, \"Domingo - 18hs\"), __jsx(\"table\", null, __jsx(\"thead\", null, __jsx(\"tr\", null, __jsx(\"th\", null, \"Nome\"), __jsx(\"th\", null, \"Rede\"), __jsx(\"th\", null, \"Status\"))), __jsx(\"tbody\", null, orderListagem && __jsx(React.Fragment, null, orderListagem.map(individuo => {\n    if (individuo.culto == \"noite\") {\n      return __jsx(\"tr\", {\n        key: individuo\n      }, __jsx(\"td\", null, individuo.nome, \" \", individuo.sobrenome), __jsx(\"td\", null, \"Pr \", individuo.rede));\n    }\n  }))))), __jsx(\"div\", {\n    className: \"box-voltar\"\n  }, __jsx(\"a\", {\n    href: \"/\",\n    className: \"button\"\n  }, \"Voltar\"))), loading && __jsx(\"p\", {\n    className: \"carregando\"\n  }, __jsx(\"img\", {\n    src: \"/images/loading.gif\"\n  }), __jsx(\"span\", null, \"Carregando...\"))));\n}\n\nexport default Page;","map":{"version":3,"sources":["C:/Users/Felipe Paulino/Documents/GitHub/AguaVIva/pages/listagem/index.jsx"],"names":["Head","React","useState","useEffect","ReactGA","Axios","Page","initialGA","initialize","pageview","urlLocal","window","location","href","loading","setLoading","data","setData","orderListagem","setOrderListagem","listagem","setListagem","url","date","Date","dia_sem","getDay","compared","a","b","nome","array","Object","values","arrayList","sort","doRemove","id","remove","delete","then","console","log","get","res","doEdit","edit","put","post","setNomeLimpar","nomeLimpar","setSobrenomeLimpar","sobrenomeLimpar","setRedeLimpar","redeLimpar","alert","salve","status","e","target","value","map","individuo","culto","sobrenome","rede"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,UAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,IAAT,GAAgB;AACd,WAASC,SAAT,GAAqB;AACnBH,IAAAA,OAAO,CAACI,UAAR,CAAmB,gBAAnB;AACAJ,IAAAA,OAAO,CAACK,QAAR,CAAiBC,QAAjB;AACD;;AACD,MAAIA,QAAJ;;AACA,aAAmC;AAAA;;AACjCA,IAAAA,QAAQ,uBAAGC,MAAM,CAACC,QAAV,qDAAG,iBAAiBC,IAA5B;AACD;;AACDN,EAAAA,SAAS;AACT,QAAM;AAAA,OAACO,OAAD;AAAA,OAAUC;AAAV,MAAwBb,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM;AAAA,OAACc,IAAD;AAAA,OAAOC;AAAP,MAAkBf,QAAQ,EAAhC;AACA,QAAM;AAAA,OAACgB,aAAD;AAAA,OAAgBC;AAAhB,MAAoCjB,QAAQ,EAAlD;AACA,QAAM;AAAA,OAACkB,QAAD;AAAA,OAAWC;AAAX,MAA0BnB,QAAQ,CAAC,OAAD,CAAxC;AACA,QAAMoB,GAAG,GAAG,+CAAZ;AACA,MAAIC,IAAI,GAAG,IAAIC,IAAJ,EAAX;AACA,MAAIC,OAAO,GAAGF,IAAI,CAACG,MAAL,EAAd;;AACA,WAASC,QAAT,CAAkBC,CAAlB,EAAqBC,CAArB,EAAwB;AACtB,QAAID,CAAC,CAACE,IAAF,GAASD,CAAC,CAACC,IAAf,EAAqB,OAAO,CAAC,CAAR;AACrB,QAAIF,CAAC,CAACE,IAAF,GAASD,CAAC,CAACC,IAAf,EAAqB,OAAO,CAAP;AACrB,WAAO,CAAP;AACD;;AAED3B,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIa,IAAJ,EAAU;AACR,UAAIe,KAAK,GAAGC,MAAM,CAACC,MAAP,CAAcjB,IAAd,CAAZ;AACA,YAAMkB,SAAS,GAAGH,KAAK,CAACI,IAAN,CAAWR,QAAX,CAAlB;AACAR,MAAAA,gBAAgB,CAACe,SAAD,CAAhB;AACD;AACF,GANQ,EAMN,CAAClB,IAAD,CANM,CAAT;AAQAb,EAAAA,SAAS,CAAC,MAAM,CACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GAVQ,EAUN,CAACa,IAAD,CAVM,CAAT;;AAWA,QAAMoB,QAAQ,GAAIC,EAAD,IAAQ;AACvBC,IAAAA,MAAM,CAAE,4CAA2CD,EAAG,OAAhD,CAAN;AACD,GAFD;;AAGA,QAAMC,MAAM,GAAIhB,GAAD,IAAS;AACtBjB,IAAAA,KAAK,CAACkC,MAAN,CAAajB,GAAb,EAAkBkB,IAAlB,CAAuB,MAAM;AAC3BC,MAAAA,OAAO,CAACC,GAAR,CAAa,gBAAepB,GAAI,EAAhC;AACD,KAFD;AAGD,GAJD;;AAKAnB,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAV,IAAAA,KAAK,CAACsC,GAAN,CAAUrB,GAAV,EAAekB,IAAf,CAAqBI,GAAD,IAAS;AAC3B3B,MAAAA,OAAO,CAAC2B,GAAG,CAAC5B,IAAL,CAAP;AACAD,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAHD;AAID,GANQ,EAMN,EANM,CAAT;;AAQA,QAAM8B,MAAM,GAAIR,EAAD,IAAQ;AACrBS,IAAAA,IAAI,CAAE,4CAA2CT,EAAG,OAAhD,CAAJ;AACD,GAFD;;AAGA,QAAMS,IAAI,GAAIxB,GAAD,IAAS;AACpBjB,IAAAA,KAAK,CAAC0C,GAAN,CAAUzB,GAAV,EAAekB,IAAf,CAAoB,MAAM;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAa,gBAAepB,GAAI,EAAhC;AACD,KAFD;AAGD,GAJD;;AAMA,QAAM0B,IAAI,GAAIhC,IAAD,IAAU;AACrBX,IAAAA,KAAK,CAAC2C,IAAN,CAAW1B,GAAX,EAAgBN,IAAhB,EAAsBwB,IAAtB,CAA4BI,GAAD,IAAS;AAClCK,MAAAA,aAAa,CAAC,CAACC,UAAF,CAAb;AACAC,MAAAA,kBAAkB,CAAC,CAACC,eAAF,CAAlB;AACAC,MAAAA,aAAa,CAAC,CAACC,UAAF,CAAb;AACAC,MAAAA,KAAK,CAAC,sCAAD,CAAL;AACA5C,MAAAA,MAAM,CAACC,QAAP,GAAkB,gBAAlB;AACD,KAND;AAOD,GARD;;AAUA,QAAM4C,KAAK,GAAG,MAAM;AAClBT,IAAAA,GAAG,CAAC;AACFU,MAAAA,MAAM,EAAE;AADN,KAAD,CAAH;AAGD,GAJD;;AAMA,SACE,4BACE,MAAC,IAAD,QACE,uEADF,CADF,EAIE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAK,IAAA,GAAG,EAAC;AAAT,IADF,EAEE,iEAFF,CADF,EAKGzC,IAAI,IACH,4BACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE,oEADF,EAEE;AACE,IAAA,QAAQ,EAAG0C,CAAD,IAAO;AACfrC,MAAAA,WAAW,CAACqC,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACD;AAHH,KAKE;AAAQ,IAAA,KAAK,EAAC;AAAd,aALF,EAME;AAAQ,IAAA,KAAK,EAAC;AAAd,qBANF,EAOE;AAAQ,IAAA,KAAK,EAAC;AAAd,qBAPF,EAQE;AAAQ,IAAA,KAAK,EAAC;AAAd,sBARF,CAFF,CADF,EAcGxC,QAAQ,IAAI,QAAZ,IACC,4BACE,kCADF,EAEE,qBACE,qBACE,kBACE,yBADF,EAEE,yBAFF,EAGE,2BAHF,CADF,CADF,EAQE,qBACGF,aAAa,IACZ,4BACGA,aAAa,CAAC2C,GAAd,CAAmBC,SAAD,IAAe;AAChC,QAAIA,SAAS,CAACC,KAAV,IAAmB,QAAvB,EAAiC;AAC/B,aACE;AAAI,QAAA,GAAG,EAAED;AAAT,SACE,kBACGA,SAAS,CAAChC,IADb,OACoBgC,SAAS,CAACE,SAD9B,CADF,EAIE,yBAAQF,SAAS,CAACG,IAAlB,CAJF,CADF;AAQD;AACF,GAXA,CADH,CAFJ,CARF,CAFF,CAfJ,EA8CG7C,QAAQ,IAAI,OAAZ,IACC,4BACE,kCADF,EAEE,qBACE,qBACE,kBACE,yBADF,EAEE,yBAFF,EAGE,2BAHF,CADF,CADF,EAQE,qBACGF,aAAa,IACZ,4BACGA,aAAa,CAAC2C,GAAd,CAAmBC,SAAD,IAAe;AAChC,QAAIA,SAAS,CAACC,KAAV,IAAmB,OAAvB,EAAgC;AAC9B,aACE;AAAI,QAAA,GAAG,EAAED;AAAT,SACE,kBACGA,SAAS,CAAChC,IADb,OACoBgC,SAAS,CAACE,SAD9B,CADF,EAIE,yBAAQF,SAAS,CAACG,IAAlB,CAJF,CADF;AAQD;AACF,GAXA,CADH,CAFJ,CARF,CAFF,CA/CJ,EA8EG7C,QAAQ,IAAI,OAAZ,IACC,4BACE,mCADF,EAEE,qBACE,qBACE,kBACE,yBADF,EAEE,yBAFF,EAGE,2BAHF,CADF,CADF,EAQE,qBACGF,aAAa,IACZ,4BACGA,aAAa,CAAC2C,GAAd,CAAmBC,SAAD,IAAe;AAChC,QAAIA,SAAS,CAACC,KAAV,IAAmB,OAAvB,EAAgC;AAC9B,aACE;AAAI,QAAA,GAAG,EAAED;AAAT,SACE,kBACGA,SAAS,CAAChC,IADb,OACoBgC,SAAS,CAACE,SAD9B,CADF,EAIE,yBAAQF,SAAS,CAACG,IAAlB,CAJF,CADF;AAQD;AACF,GAXA,CADH,CAFJ,CARF,CAFF,CA/EJ,EA8GG7C,QAAQ,IAAI,OAAZ,IACC,4BACE,kCADF,EAEE,qBACE,qBACE,kBACE,yBADF,EAEE,yBAFF,EAGE,2BAHF,CADF,CADF,EAQE,qBACGF,aAAa,IACZ,4BACGA,aAAa,CAAC2C,GAAd,CAAmBC,SAAD,IAAe;AAChC,QAAIA,SAAS,CAACC,KAAV,IAAmB,QAAvB,EAAiC;AAC/B,aACE;AAAI,QAAA,GAAG,EAAED;AAAT,SACE,kBACGA,SAAS,CAAChC,IADb,OACoBgC,SAAS,CAACE,SAD9B,CADF,EAIE,yBAAQF,SAAS,CAACG,IAAlB,CAJF,CADF;AAQD;AACF,GAXA,CADH,CAFJ,CARF,CAFF,EA8BE,kCA9BF,EA+BE,qBACE,qBACE,kBACE,yBADF,EAEE,yBAFF,EAGE,2BAHF,CADF,CADF,EAQE,qBACG/C,aAAa,IACZ,4BACGA,aAAa,CAAC2C,GAAd,CAAmBC,SAAD,IAAe;AAChC,QAAIA,SAAS,CAACC,KAAV,IAAmB,OAAvB,EAAgC;AAC9B,aACE;AAAI,QAAA,GAAG,EAAED;AAAT,SACE,kBACGA,SAAS,CAAChC,IADb,OACoBgC,SAAS,CAACE,SAD9B,CADF,EAIE,yBAAQF,SAAS,CAACG,IAAlB,CAJF,EAKE,0BALF,CADF;AASD;AACF,GAZA,CADH,CAFJ,CARF,CA/BF,EA4DE,mCA5DF,EA6DE,qBACE,qBACE,kBACE,yBADF,EAEE,yBAFF,EAGE,2BAHF,CADF,CADF,EAQE,qBACG/C,aAAa,IACZ,4BACGA,aAAa,CAAC2C,GAAd,CAAmBC,SAAD,IAAe;AAChC,QAAIA,SAAS,CAACC,KAAV,IAAmB,OAAvB,EAAgC;AAC9B,aACE;AAAI,QAAA,GAAG,EAAED;AAAT,SACE,kBACGA,SAAS,CAAChC,IADb,OACoBgC,SAAS,CAACE,SAD9B,CADF,EAIE,yBAAQF,SAAS,CAACG,IAAlB,CAJF,CADF;AAQD;AACF,GAXA,CADH,CAFJ,CARF,CA7DF,CA/GJ,EAyME;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAG,IAAA,IAAI,EAAC,GAAR;AAAY,IAAA,SAAS,EAAC;AAAtB,cADF,CAzMF,CANJ,EAsNGnD,OAAO,IACN;AAAG,IAAA,SAAS,EAAC;AAAb,KACE;AAAK,IAAA,GAAG,EAAC;AAAT,IADF,EAEE,oCAFF,CAvNJ,CAJF,CADF;AAoOD;;AAED,eAAeR,IAAf","sourcesContent":["import Head from \"next/head\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport ReactGA from \"react-ga\";\r\nimport Axios from \"axios\";\r\n\r\nfunction Page() {\r\n  function initialGA() {\r\n    ReactGA.initialize(\"UA-170909874-1\");\r\n    ReactGA.pageview(urlLocal);\r\n  }\r\n  let urlLocal;\r\n  if (typeof window !== \"undefined\") {\r\n    urlLocal = window.location?.href;\r\n  }\r\n  initialGA();\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState();\r\n  const [orderListagem, setOrderListagem] = useState();\r\n  const [listagem, setListagem] = useState(\"todos\");\r\n  const url = \"https://aguaviva-rp.firebaseio.com/teste.json\";\r\n  var date = new Date();\r\n  var dia_sem = date.getDay();\r\n  function compared(a, b) {\r\n    if (a.nome < b.nome) return -1;\r\n    if (a.nome > b.nome) return 1;\r\n    return 0;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      var array = Object.values(data);\r\n      const arrayList = array.sort(compared);\r\n      setOrderListagem(arrayList);\r\n    }\r\n  }, [data]);\r\n\r\n  useEffect(() => {\r\n    // if (data) {\r\n    //   if (dia_sem >= 1 && dia_sem <= 3) {\r\n    //     Object.entries(data).map((individuo) => {\r\n    //       if (individuo[0] != \"base\") {\r\n    //         doRemove(individuo[0]);\r\n    //       }\r\n    //     });\r\n    //   }\r\n    // }\r\n  }, [data]);\r\n  const doRemove = (id) => {\r\n    remove(`https://aguaviva-rp.firebaseio.com/teste/${id}.json`);\r\n  };\r\n  const remove = (url) => {\r\n    Axios.delete(url).then(() => {\r\n      console.log(`você deletou ${url}`);\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    Axios.get(url).then((res) => {\r\n      setData(res.data);\r\n      setLoading(false);\r\n    });\r\n  }, []);\r\n\r\n  const doEdit = (id) => {\r\n    edit(`https://aguaviva-rp.firebaseio.com/teste/${id}.json`);\r\n  };\r\n  const edit = (url) => {\r\n    Axios.put(url).then(() => {\r\n      console.log(`você deletou ${url}`);\r\n    });\r\n  };\r\n\r\n  const post = (data) => {\r\n    Axios.post(url, data).then((res) => {\r\n      setNomeLimpar(!nomeLimpar);\r\n      setSobrenomeLimpar(!sobrenomeLimpar);\r\n      setRedeLimpar(!redeLimpar);\r\n      alert(\"você confirmou sua presença no culto\");\r\n      window.location = \"/listagem.html\";\r\n    });\r\n  };\r\n\r\n  const salve = () => {\r\n    put({\r\n      status: true,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Head>\r\n        <title>Igreja Batista Água Viva - Ribeirão Pires</title>\r\n      </Head>\r\n      <div className=\"container\">\r\n        <div className=\"header\">\r\n          <img src=\"/images/logo.jpg\" />\r\n          <h1>Listagem de controle de presença no culto</h1>\r\n        </div>\r\n        {data && (\r\n          <>\r\n            <div className=\"select\">\r\n              <label>Selecione a listagem do culto que deseja ver</label>\r\n              <select\r\n                onChange={(e) => {\r\n                  setListagem(e.target.value);\r\n                }}\r\n              >\r\n                <option value=\"todos\">Todos</option>\r\n                <option value=\"sabado\">Sabado - 19hs</option>\r\n                <option value=\"manha\">Domingo - 9hs</option>\r\n                <option value=\"noite\">Domingo - 18hs</option>\r\n              </select>\r\n            </div>\r\n            {listagem == \"sabado\" && (\r\n              <>\r\n                <h1>Sabado - 19hs</h1>\r\n                <table>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Nome</th>\r\n                      <th>Rede</th>\r\n                      <th>Status</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {orderListagem && (\r\n                      <>\r\n                        {orderListagem.map((individuo) => {\r\n                          if (individuo.culto == \"sabado\") {\r\n                            return (\r\n                              <tr key={individuo}>\r\n                                <td>\r\n                                  {individuo.nome} {individuo.sobrenome}\r\n                                </td>\r\n                                <td>Pr {individuo.rede}</td>\r\n                              </tr>\r\n                            );\r\n                          }\r\n                        })}\r\n                      </>\r\n                    )}\r\n                  </tbody>\r\n                </table>\r\n              </>\r\n            )}\r\n            {listagem == \"manha\" && (\r\n              <>\r\n                <h1>Domingo - 9hs</h1>\r\n                <table>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Nome</th>\r\n                      <th>Rede</th>\r\n                      <th>Status</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {orderListagem && (\r\n                      <>\r\n                        {orderListagem.map((individuo) => {\r\n                          if (individuo.culto == \"manha\") {\r\n                            return (\r\n                              <tr key={individuo}>\r\n                                <td>\r\n                                  {individuo.nome} {individuo.sobrenome}\r\n                                </td>\r\n                                <td>Pr {individuo.rede}</td>\r\n                              </tr>\r\n                            );\r\n                          }\r\n                        })}\r\n                      </>\r\n                    )}\r\n                  </tbody>\r\n                </table>\r\n              </>\r\n            )}\r\n            {listagem == \"noite\" && (\r\n              <>\r\n                <h1>Domingo - 18hs</h1>\r\n                <table>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Nome</th>\r\n                      <th>Rede</th>\r\n                      <th>Status</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {orderListagem && (\r\n                      <>\r\n                        {orderListagem.map((individuo) => {\r\n                          if (individuo.culto == \"noite\") {\r\n                            return (\r\n                              <tr key={individuo}>\r\n                                <td>\r\n                                  {individuo.nome} {individuo.sobrenome}\r\n                                </td>\r\n                                <td>Pr {individuo.rede}</td>\r\n                              </tr>\r\n                            );\r\n                          }\r\n                        })}\r\n                      </>\r\n                    )}\r\n                  </tbody>\r\n                </table>\r\n              </>\r\n            )}\r\n            {listagem == \"todos\" && (\r\n              <>\r\n                <h1>Sabado - 19hs</h1>\r\n                <table>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Nome</th>\r\n                      <th>Rede</th>\r\n                      <th>Status</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {orderListagem && (\r\n                      <>\r\n                        {orderListagem.map((individuo) => {\r\n                          if (individuo.culto == \"sabado\") {\r\n                            return (\r\n                              <tr key={individuo}>\r\n                                <td>\r\n                                  {individuo.nome} {individuo.sobrenome}\r\n                                </td>\r\n                                <td>Pr {individuo.rede}</td>\r\n                              </tr>\r\n                            );\r\n                          }\r\n                        })}\r\n                      </>\r\n                    )}\r\n                  </tbody>\r\n                </table>\r\n\r\n                <h1>Domingo - 9hs</h1>\r\n                <table>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Nome</th>\r\n                      <th>Rede</th>\r\n                      <th>Status</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {orderListagem && (\r\n                      <>\r\n                        {orderListagem.map((individuo) => {\r\n                          if (individuo.culto == \"manha\") {\r\n                            return (\r\n                              <tr key={individuo}>\r\n                                <td>\r\n                                  {individuo.nome} {individuo.sobrenome}\r\n                                </td>\r\n                                <td>Pr {individuo.rede}</td>\r\n                                <td>Click</td>\r\n                              </tr>\r\n                            );\r\n                          }\r\n                        })}\r\n                      </>\r\n                    )}\r\n                  </tbody>\r\n                </table>\r\n\r\n                <h1>Domingo - 18hs</h1>\r\n                <table>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Nome</th>\r\n                      <th>Rede</th>\r\n                      <th>Status</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {orderListagem && (\r\n                      <>\r\n                        {orderListagem.map((individuo) => {\r\n                          if (individuo.culto == \"noite\") {\r\n                            return (\r\n                              <tr key={individuo}>\r\n                                <td>\r\n                                  {individuo.nome} {individuo.sobrenome}\r\n                                </td>\r\n                                <td>Pr {individuo.rede}</td>\r\n                              </tr>\r\n                            );\r\n                          }\r\n                        })}\r\n                      </>\r\n                    )}\r\n                  </tbody>\r\n                </table>\r\n              </>\r\n            )}\r\n            <div className=\"box-voltar\">\r\n              <a href=\"/\" className=\"button\">\r\n                Voltar\r\n              </a>\r\n            </div>\r\n          </>\r\n        )}\r\n        {loading && (\r\n          <p className=\"carregando\">\r\n            <img src=\"/images/loading.gif\" />\r\n            <span>Carregando...</span>\r\n          </p>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Page;\r\n"]},"metadata":{},"sourceType":"module"}