{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport Form from \"react-bootstrap/Form\";\nexport default function Header({\n  apagarRegistros,\n  filtrarRegistros,\n  Button\n}) {\n  function remove() {\n    setApagarRegistros(true);\n    fetch(\"https://jsonplaceholder.typicode.com/posts/1\", {\n      method: \"DELETE\"\n    }).then(response => response.json()).then(json => setRegistros(json)).then(json => setApagarRegistros(false));\n  }\n\n  function filtrar(value) {\n    if (value >= 1) {\n      setFiltraRegistros(true);\n      fetch(`https://jsonplaceholder.typicode.com/posts?userId=${value}`).then(response => response.json()).then(json => setRegistros(json)).then(json => setFiltraRegistros(json));\n    }\n  }\n\n  return __jsx(\"header\", {\n    className: \"header\"\n  }, __jsx(\"img\", {\n    className: \"logo\",\n    src: \"/images/logo.png\",\n    alt: \"petz\"\n  }), apagarRegistros && __jsx(\"p\", null, \"Apagando...\"), filtrarRegistros && __jsx(\"p\", null, \"Filtrando...\"), __jsx(\"div\", {\n    className: \"filtros\"\n  }, __jsx(Form.Group, {\n    className: \"select\"\n  }, __jsx(Form.Label, null, \"Filtrar:\"), __jsx(Form.Control, {\n    as: \"select\",\n    value: \"Choose...\",\n    onChange: e => {\n      filtrar(e.target.value);\n    }\n  }, __jsx(\"option\", null, \"Selecione\"), __jsx(\"option\", {\n    value: \"1\"\n  }, \" 1 ao 10\"), __jsx(\"option\", {\n    value: \"2\"\n  }, \" 11 ao 20\"))), __jsx(Button, {\n    onClick: () => {\n      remove();\n    }\n  }, \"Apagar todos os registros\")));\n}","map":{"version":3,"sources":["C:/Users/Felipe Paulino/Documents/TesteFront2/src/components/Header.jsx"],"names":["React","Form","Header","apagarRegistros","filtrarRegistros","Button","remove","setApagarRegistros","fetch","method","then","response","json","setRegistros","filtrar","value","setFiltraRegistros","e","target"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AAEA,eAAe,SAASC,MAAT,CAAgB;AAAEC,EAAAA,eAAF;AAAmBC,EAAAA,gBAAnB;AAAqCC,EAAAA;AAArC,CAAhB,EAA+D;AAC5E,WAASC,MAAT,GAAkB;AAChBC,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACAC,IAAAA,KAAK,CAAC,8CAAD,EAAiD;AACpDC,MAAAA,MAAM,EAAE;AAD4C,KAAjD,CAAL,CAGGC,IAHH,CAGSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAHtB,EAIGF,IAJH,CAISE,IAAD,IAAUC,YAAY,CAACD,IAAD,CAJ9B,EAKGF,IALH,CAKSE,IAAD,IAAUL,kBAAkB,CAAC,KAAD,CALpC;AAMD;;AAED,WAASO,OAAT,CAAiBC,KAAjB,EAAwB;AACtB,QAAIA,KAAK,IAAI,CAAb,EAAgB;AACdC,MAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACAR,MAAAA,KAAK,CAAE,qDAAoDO,KAAM,EAA5D,CAAL,CACGL,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESE,IAAD,IAAUC,YAAY,CAACD,IAAD,CAF9B,EAGGF,IAHH,CAGSE,IAAD,IAAUI,kBAAkB,CAACJ,IAAD,CAHpC;AAID;AACF;;AACD,SACE;AAAQ,IAAA,SAAS,EAAC;AAAlB,KACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAsB,IAAA,GAAG,EAAC,kBAA1B;AAA6C,IAAA,GAAG,EAAC;AAAjD,IADF,EAEGT,eAAe,IAAI,+BAFtB,EAGGC,gBAAgB,IAAI,gCAHvB,EAIE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE,MAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC;AAAtB,KACE,MAAC,IAAD,CAAM,KAAN,mBADF,EAEE,MAAC,IAAD,CAAM,OAAN;AACE,IAAA,EAAE,EAAC,QADL;AAEE,IAAA,KAAK,EAAC,WAFR;AAGE,IAAA,QAAQ,EAAGa,CAAD,IAAO;AACfH,MAAAA,OAAO,CAACG,CAAC,CAACC,MAAF,CAASH,KAAV,CAAP;AACD;AALH,KAOE,kCAPF,EAQE;AAAQ,IAAA,KAAK,EAAC;AAAd,gBARF,EASE;AAAQ,IAAA,KAAK,EAAC;AAAd,iBATF,CAFF,CADF,EAgBE,MAAC,MAAD;AACE,IAAA,OAAO,EAAE,MAAM;AACbT,MAAAA,MAAM;AACP;AAHH,iCAhBF,CAJF,CADF;AA+BD","sourcesContent":["import React from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nexport default function Header({ apagarRegistros, filtrarRegistros, Button }) {\r\n  function remove() {\r\n    setApagarRegistros(true);\r\n    fetch(\"https://jsonplaceholder.typicode.com/posts/1\", {\r\n      method: \"DELETE\",\r\n    })\r\n      .then((response) => response.json())\r\n      .then((json) => setRegistros(json))\r\n      .then((json) => setApagarRegistros(false));\r\n  }\r\n\r\n  function filtrar(value) {\r\n    if (value >= 1) {\r\n      setFiltraRegistros(true);\r\n      fetch(`https://jsonplaceholder.typicode.com/posts?userId=${value}`)\r\n        .then((response) => response.json())\r\n        .then((json) => setRegistros(json))\r\n        .then((json) => setFiltraRegistros(json));\r\n    }\r\n  }\r\n  return (\r\n    <header className=\"header\">\r\n      <img className=\"logo\" src=\"/images/logo.png\" alt=\"petz\" />\r\n      {apagarRegistros && <p>Apagando...</p>}\r\n      {filtrarRegistros && <p>Filtrando...</p>}\r\n      <div className=\"filtros\">\r\n        <Form.Group className=\"select\">\r\n          <Form.Label>Filtrar:</Form.Label>\r\n          <Form.Control\r\n            as=\"select\"\r\n            value=\"Choose...\"\r\n            onChange={(e) => {\r\n              filtrar(e.target.value);\r\n            }}\r\n          >\r\n            <option>Selecione</option>\r\n            <option value=\"1\"> 1 ao 10</option>\r\n            <option value=\"2\"> 11 ao 20</option>\r\n          </Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button\r\n          onClick={() => {\r\n            remove();\r\n          }}\r\n        >\r\n          Apagar todos os registros\r\n        </Button>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}