{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { updateParameter } from \"../src/helpers/update\";\nimport { MakeCar, ModelMake, VersionModel, VehiclesPage1, VehiclesPage2, VehiclesPage3 } from \"../src/services/requests\";\n\nfunction Page({\n  GetMakeCar,\n  GetVehiclesPage1,\n  GetVehiclesPage2,\n  GetVehiclesPage3\n}) {\n  const {\n    0: modelId,\n    1: setModelId\n  } = useState();\n  const {\n    0: model,\n    1: listModel\n  } = useState();\n  const {\n    0: versionId,\n    1: setVersionId\n  } = useState();\n  const {\n    0: version,\n    1: listVersion\n  } = useState();\n\n  const readModel = async () => {\n    const GetModelMake = await ModelMake(modelId);\n    listModel(GetModelMake);\n  };\n\n  useEffect(() => {\n    readModel();\n  }, [modelId]);\n\n  const readVersion = async () => {\n    const GetVersionModel = await VersionModel(versionId);\n    listVersion(GetVersionModel);\n  };\n\n  useEffect(() => {\n    readVersion();\n  }, [versionId]);\n  const allVehicles = [...GetVehiclesPage1, ...GetVehiclesPage2, ...GetVehiclesPage3];\n  const a = allVehicles.filter(all => {\n    return allVehicles === null || allVehicles === void 0 ? void 0 : allVehicles.find(({\n      Version\n    }) => Version === all.Verson);\n  });\n  console.log(a, \"a\");\n  return __jsx(React.Fragment, null, __jsx(\"form\", null, __jsx(\"input\", {\n    name: \"locale\",\n    placeholder: \"Onde:\"\n  }), __jsx(\"select\", {\n    className: \"input\",\n    name: \"distance\"\n  }, __jsx(\"option\", {\n    placeholder: \"Raio:\"\n  })), __jsx(\"select\", {\n    className: \"input\",\n    name: \"make\",\n    onChange: e => {\n      setModelId(e.target.value);\n    }\n  }, __jsx(\"option\", null, \"Todas\"), GetMakeCar.map(make => {\n    return __jsx(\"option\", {\n      value: make.ID,\n      key: make.ID\n    }, make.Name);\n  })), __jsx(\"select\", {\n    className: \"input\",\n    name: \"model\",\n    onChange: e => {\n      setVersionId(e.target.value);\n    }\n  }, __jsx(\"option\", null, \"Todas\"), model && __jsx(React.Fragment, null, model.map(mode => {\n    return __jsx(\"option\", {\n      value: mode.ID,\n      key: mode.ID\n    }, mode.Name);\n  }))), __jsx(\"select\", {\n    className: \"input\",\n    name: \"year\"\n  }, allVehicles.map(vehicle => {\n    return __jsx(\"option\", null, vehicle.YearModel, \" / \", vehicle.YearFab);\n  })), __jsx(\"select\", {\n    className: \"input\",\n    name: \"price\"\n  }, allVehicles.map(vehicle => {\n    return __jsx(React.Fragment, null, vehicle.Price && __jsx(\"option\", {\n      value: vehicle.Price,\n      key: vehicle.ID\n    }, vehicle.Price));\n  })), __jsx(\"select\", {\n    className: \"input\",\n    name: \"version\"\n  }, __jsx(\"option\", null, \"Todas\"), version && __jsx(React.Fragment, null, version.map(versio => {\n    return __jsx(\"option\", {\n      value: versio.ID,\n      key: versio.ID\n    }, versio.Name);\n  }))), __jsx(\"button\", null, \"Limpar Filtros\"), __jsx(\"button\", null, \"Ver Ofertas\")), __jsx(\"div\", {\n    className: \"boxes\"\n  }, allVehicles.map(vehicle => {\n    return __jsx(\"div\", {\n      className: \"box\"\n    }, __jsx(\"p\", null, \"Marca: \", vehicle.Make), __jsx(\"p\", null, \"Modelo: \", vehicle.Model), __jsx(\"p\", null, \"Vers\\xE3o: \", vehicle.Version), __jsx(\"img\", {\n      src: vehicle.Image\n    }), __jsx(\"p\", null, \"KM: \", vehicle.KM), __jsx(\"p\", null, \"Pre\\xE7o: \", vehicle.Price), __jsx(\"p\", null, \"Ano: \", vehicle.YearModel, \"/ \", vehicle.YearFab), __jsx(\"p\", null, \"Cor: \", vehicle.Color));\n  })));\n}\n\nPage.getInitialProps = async () => {\n  const GetMakeCar = await MakeCar();\n  const GetVehiclesPage1 = await VehiclesPage1();\n  const GetVehiclesPage2 = await VehiclesPage2();\n  const GetVehiclesPage3 = await VehiclesPage3();\n  return {\n    GetMakeCar,\n    GetVehiclesPage1,\n    GetVehiclesPage2,\n    GetVehiclesPage3\n  };\n};\n\nexport default Page;","map":{"version":3,"sources":["C:/Users/Felipe Paulino/Documents/GitHub/Web-Motors/pages/index.jsx"],"names":["React","useState","useEffect","updateParameter","MakeCar","ModelMake","VersionModel","VehiclesPage1","VehiclesPage2","VehiclesPage3","Page","GetMakeCar","GetVehiclesPage1","GetVehiclesPage2","GetVehiclesPage3","modelId","setModelId","model","listModel","versionId","setVersionId","version","listVersion","readModel","GetModelMake","readVersion","GetVersionModel","allVehicles","a","filter","all","find","Version","Verson","console","log","e","target","value","map","make","ID","Name","mode","vehicle","YearModel","YearFab","Price","versio","Make","Model","Image","KM","Color","getInitialProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport { updateParameter } from \"../src/helpers/update\";\r\nimport {\r\n  MakeCar,\r\n  ModelMake,\r\n  VersionModel,\r\n  VehiclesPage1,\r\n  VehiclesPage2,\r\n  VehiclesPage3,\r\n} from \"../src/services/requests\";\r\n\r\nfunction Page({\r\n  GetMakeCar,\r\n  GetVehiclesPage1,\r\n  GetVehiclesPage2,\r\n  GetVehiclesPage3,\r\n}) {\r\n  const [modelId, setModelId] = useState();\r\n  const [model, listModel] = useState();\r\n  const [versionId, setVersionId] = useState();\r\n  const [version, listVersion] = useState();\r\n  const readModel = async () => {\r\n    const GetModelMake = await ModelMake(modelId);\r\n    listModel(GetModelMake);\r\n  };\r\n  useEffect(() => {\r\n    readModel();\r\n  }, [modelId]);\r\n\r\n  const readVersion = async () => {\r\n    const GetVersionModel = await VersionModel(versionId);\r\n    listVersion(GetVersionModel);\r\n  };\r\n  useEffect(() => {\r\n    readVersion();\r\n  }, [versionId]);\r\n\r\n  const allVehicles = [\r\n    ...GetVehiclesPage1,\r\n    ...GetVehiclesPage2,\r\n    ...GetVehiclesPage3,\r\n  ];\r\n  const a = allVehicles.filter((all) => {\r\n    return allVehicles?.find(({ Version }) => Version === all.Verson);\r\n  });\r\n  console.log(a, \"a\");\r\n  return (\r\n    <>\r\n      <form>\r\n        <input name=\"locale\" placeholder=\"Onde:\"></input>\r\n        <select className=\"input\" name=\"distance\">\r\n          <option placeholder=\"Raio:\"></option>\r\n        </select>\r\n\r\n        <select\r\n          className=\"input\"\r\n          name=\"make\"\r\n          onChange={(e) => {\r\n            setModelId(e.target.value);\r\n          }}\r\n        >\r\n          <option>Todas</option>\r\n          {GetMakeCar.map((make) => {\r\n            return (\r\n              <option value={make.ID} key={make.ID}>\r\n                {make.Name}\r\n              </option>\r\n            );\r\n          })}\r\n        </select>\r\n        <select\r\n          className=\"input\"\r\n          name=\"model\"\r\n          onChange={(e) => {\r\n            setVersionId(e.target.value);\r\n          }}\r\n        >\r\n          <option>Todas</option>\r\n          {model && (\r\n            <>\r\n              {model.map((mode) => {\r\n                return (\r\n                  <option value={mode.ID} key={mode.ID}>\r\n                    {mode.Name}\r\n                  </option>\r\n                );\r\n              })}\r\n            </>\r\n          )}\r\n        </select>\r\n        <select className=\"input\" name=\"year\">\r\n          {allVehicles.map((vehicle) => {\r\n            return (\r\n              <option>\r\n                {vehicle.YearModel} / {vehicle.YearFab}\r\n              </option>\r\n            );\r\n          })}\r\n        </select>\r\n        <select className=\"input\" name=\"price\">\r\n          {allVehicles.map((vehicle) => {\r\n            return (\r\n              <>\r\n                {vehicle.Price && (\r\n                  <option value={vehicle.Price} key={vehicle.ID}>\r\n                    {vehicle.Price}\r\n                  </option>\r\n                )}\r\n              </>\r\n            );\r\n          })}\r\n        </select>\r\n        <select className=\"input\" name=\"version\">\r\n          <option>Todas</option>\r\n          {version && (\r\n            <>\r\n              {version.map((versio) => {\r\n                return (\r\n                  <option value={versio.ID} key={versio.ID}>\r\n                    {versio.Name}\r\n                  </option>\r\n                );\r\n              })}\r\n            </>\r\n          )}\r\n        </select>\r\n        <button>Limpar Filtros</button>\r\n        <button>Ver Ofertas</button>\r\n      </form>\r\n      <div className=\"boxes\">\r\n        {allVehicles.map((vehicle) => {\r\n          return (\r\n            <div className=\"box\">\r\n              <p>Marca: {vehicle.Make}</p>\r\n              <p>Modelo: {vehicle.Model}</p>\r\n              <p>Versão: {vehicle.Version}</p>\r\n              <img src={vehicle.Image} />\r\n              <p>KM: {vehicle.KM}</p>\r\n              <p>Preço: {vehicle.Price}</p>\r\n              <p>\r\n                Ano: {vehicle.YearModel}/ {vehicle.YearFab}\r\n              </p>\r\n              <p>Cor: {vehicle.Color}</p>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nPage.getInitialProps = async () => {\r\n  const GetMakeCar = await MakeCar();\r\n  const GetVehiclesPage1 = await VehiclesPage1();\r\n  const GetVehiclesPage2 = await VehiclesPage2();\r\n  const GetVehiclesPage3 = await VehiclesPage3();\r\n  return {\r\n    GetMakeCar,\r\n    GetVehiclesPage1,\r\n    GetVehiclesPage2,\r\n    GetVehiclesPage3,\r\n  };\r\n};\r\n\r\nexport default Page;\r\n"]},"metadata":{},"sourceType":"module"}