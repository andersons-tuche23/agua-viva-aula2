{"ast":null,"code":"var __jsx = React.createElement;\nimport Head from \"next/head\";\nimport React, { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\n\nfunction Page() {\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(true);\n  const {\n    0: data,\n    1: setData\n  } = useState();\n  const {\n    0: orderListagem,\n    1: setOrderListagem\n  } = useState();\n  const {\n    0: listagem,\n    1: setListagem\n  } = useState(\"todos\");\n  const url = \"https://aguaviva-rp.firebaseio.com/inscricoes.json\"; // var array = [\"jose\", \"maria\", \"anas\"];\n\n  function compared(a, b) {\n    if (a.nome < b.nome) return -1;\n    if (a.nome > b.nome) return 1;\n    return 0;\n  } // // // const g = x.sort(compared);\n  // const j = [data].sort(compared);\n\n\n  useEffect(() => {\n    if (data) {\n      var array = Object.values(data);\n      const arrayList = array.sort(compared);\n      setOrderListagem(arrayList);\n    }\n  }, [data]);\n  useEffect(() => {\n    setLoading(true);\n    Axios.get(url).then(res => {\n      setData(res.data);\n      setLoading(false);\n    });\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"header\"\n  }, __jsx(\"img\", {\n    src: \"/images/logo.jpg\"\n  }), __jsx(\"h1\", null, \"Listagem de controle de presen\\xE7a no culto\")), data && __jsx(React.Fragment, null, __jsx(\"label\", null, \"Selecione a listagem do culto que deseja ver\"), __jsx(\"select\", {\n    onChange: e => {\n      setListagem(e.target.value);\n    }\n  }, __jsx(\"option\", {\n    value: \"todos\"\n  }, \"Todos\"), __jsx(\"option\", {\n    value: \"sabado\"\n  }, \"Sabado - 19hs\"), __jsx(\"option\", {\n    value: \"manha\"\n  }, \"Domingo - 9hs\"), __jsx(\"option\", {\n    value: \"noite\"\n  }, \"Domingo - 18hs\")), (listagem == \"sabado\" || listagem == \"todos\") && __jsx(React.Fragment, null, __jsx(\"h1\", null, \"Sabado\"), __jsx(\"table\", null, __jsx(\"thead\", null, __jsx(\"tr\", null, __jsx(\"th\", null, \"Nome\"), __jsx(\"th\", null, \"Rede\"))), __jsx(\"tbody\", null, orderListagem && __jsx(React.Fragment, null, orderListagem.map(individuo => {\n    if (individuo.culto == \"sabado\") {\n      return __jsx(\"tr\", {\n        key: individuo\n      }, __jsx(\"td\", null, individuo.nome, \" \", individuo.sobrenome), __jsx(\"td\", null, \"Pr \", individuo.rede));\n    }\n  }))))), (listagem == \"manha\" || listagem == \"todos\") && __jsx(React.Fragment, null, __jsx(\"h1\", null, \"Manh\\xE3\"), __jsx(\"table\", null, __jsx(\"thead\", null, __jsx(\"tr\", null, __jsx(\"th\", null, \"Nome\"), __jsx(\"th\", null, \"Rede\"))), __jsx(\"tbody\", null, orderListagem && __jsx(React.Fragment, null, orderListagem.map(individuo => {\n    if (individuo.culto == \"manha\") {\n      return __jsx(\"tr\", {\n        key: individuo\n      }, __jsx(\"td\", null, individuo.nome, \" \", individuo.sobrenome), __jsx(\"td\", null, individuo.rede));\n    }\n  }))))), (listagem == \"noite\" || listagem == \"todos\") && __jsx(React.Fragment, null, __jsx(\"h1\", null, \"Noite\"), __jsx(\"table\", null, __jsx(\"thead\", null, __jsx(\"tr\", null, __jsx(\"th\", null, \"Nome\"), __jsx(\"th\", null, \"Rede\"))), __jsx(\"tbody\", null, orderListagem && __jsx(React.Fragment, null, orderListagem.map(individuo => {\n    if (individuo.culto == \"noite\") {\n      return __jsx(\"tr\", {\n        key: individuo\n      }, __jsx(\"td\", null, individuo.nome, \" \", individuo.sobrenome), __jsx(\"td\", null, individuo.rede));\n    }\n  })))))), loading && __jsx(\"p\", null, \"Loading\"));\n}\n\nexport default Page;","map":{"version":3,"sources":["C:/Users/Felipe Paulino/Documents/GitHub/Petz-listagem/pages/listagem.jsx"],"names":["Head","React","useState","useEffect","Axios","Page","loading","setLoading","data","setData","orderListagem","setOrderListagem","listagem","setListagem","url","compared","a","b","nome","array","Object","values","arrayList","sort","get","then","res","e","target","value","map","individuo","culto","sobrenome","rede"],"mappings":"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","sourcesContent":["import Head from \"next/head\";\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nimport Axios from \"axios\";\r\n\r\nfunction Page() {\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState();\r\n  const [orderListagem, setOrderListagem] = useState();\r\n  const [listagem, setListagem] = useState(\"todos\");\r\n  const url = \"https://aguaviva-rp.firebaseio.com/inscricoes.json\";\r\n\r\n  // var array = [\"jose\", \"maria\", \"anas\"];\r\n  function compared(a, b) {\r\n    if (a.nome < b.nome) return -1;\r\n    if (a.nome > b.nome) return 1;\r\n    return 0;\r\n  }\r\n  // // // const g = x.sort(compared);\r\n  // const j = [data].sort(compared);\r\n  useEffect(() => {\r\n    if (data) {\r\n      var array = Object.values(data);\r\n      const arrayList = array.sort(compared);\r\n      setOrderListagem(arrayList);\r\n    }\r\n  }, [data]);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    Axios.get(url).then((res) => {\r\n      setData(res.data);\r\n      setLoading(false);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"header\">\r\n        <img src=\"/images/logo.jpg\" />\r\n        <h1>Listagem de controle de presença no culto</h1>\r\n      </div>\r\n      {data && (\r\n        <>\r\n          <label>Selecione a listagem do culto que deseja ver</label>\r\n          <select\r\n            onChange={(e) => {\r\n              setListagem(e.target.value);\r\n            }}\r\n          >\r\n            <option value=\"todos\">Todos</option>\r\n            <option value=\"sabado\">Sabado - 19hs</option>\r\n            <option value=\"manha\">Domingo - 9hs</option>\r\n            <option value=\"noite\">Domingo - 18hs</option>\r\n          </select>\r\n          {(listagem == \"sabado\" || listagem == \"todos\") && (\r\n            <>\r\n              <h1>Sabado</h1>\r\n              <table>\r\n                <thead>\r\n                  <tr>\r\n                    <th>Nome</th>\r\n                    <th>Rede</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {orderListagem && (\r\n                    <>\r\n                      {orderListagem.map((individuo) => {\r\n                        if (individuo.culto == \"sabado\") {\r\n                          return (\r\n                            <tr key={individuo}>\r\n                              <td>\r\n                                {individuo.nome} {individuo.sobrenome}\r\n                              </td>\r\n                              <td>Pr {individuo.rede}</td>\r\n                            </tr>\r\n                          );\r\n                        }\r\n                      })}\r\n                    </>\r\n                  )}\r\n                </tbody>\r\n              </table>\r\n            </>\r\n          )}\r\n          {(listagem == \"manha\" || listagem == \"todos\") && (\r\n            <>\r\n              <h1>Manhã</h1>\r\n              <table>\r\n                <thead>\r\n                  <tr>\r\n                    <th>Nome</th>\r\n                    <th>Rede</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {orderListagem && (\r\n                    <>\r\n                      {orderListagem.map((individuo) => {\r\n                        if (individuo.culto == \"manha\") {\r\n                          return (\r\n                            <tr key={individuo}>\r\n                              <td>\r\n                                {individuo.nome} {individuo.sobrenome}\r\n                              </td>\r\n                              <td>{individuo.rede}</td>\r\n                            </tr>\r\n                          );\r\n                        }\r\n                      })}\r\n                    </>\r\n                  )}\r\n                </tbody>\r\n              </table>\r\n            </>\r\n          )}\r\n          {(listagem == \"noite\" || listagem == \"todos\") && (\r\n            <>\r\n              <h1>Noite</h1>\r\n              <table>\r\n                <thead>\r\n                  <tr>\r\n                    <th>Nome</th>\r\n                    <th>Rede</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {orderListagem && (\r\n                    <>\r\n                      {orderListagem.map((individuo) => {\r\n                        if (individuo.culto == \"noite\") {\r\n                          return (\r\n                            <tr key={individuo}>\r\n                              <td>\r\n                                {individuo.nome} {individuo.sobrenome}\r\n                              </td>\r\n                              <td>{individuo.rede}</td>\r\n                            </tr>\r\n                          );\r\n                        }\r\n                      })}\r\n                    </>\r\n                  )}\r\n                </tbody>\r\n              </table>\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n      {loading && <p>Loading</p>}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Page;\r\n"]},"metadata":{},"sourceType":"module"}