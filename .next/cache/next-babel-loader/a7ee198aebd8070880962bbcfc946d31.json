{"ast":null,"code":"var __jsx = React.createElement;\nimport Head from \"next/head\";\nimport React, { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\n\nfunction Page() {\n  var _useState = useState(true),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var _useState2 = useState(),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(),\n      orderListagem = _useState3[0],\n      setOrderListagem = _useState3[1];\n\n  var _useState4 = useState(\"todos\"),\n      listagem = _useState4[0],\n      setListagem = _useState4[1];\n\n  var url = \"https://aguaviva-rp.firebaseio.com/inscricoes.json\"; // var array = [\"jose\", \"maria\", \"anas\"];\n\n  function compared(a, b) {\n    if (a.nome < b.nome) return 1;\n    if (a.nome > b.nome) return -1;\n    return 0;\n  } // // // const g = x.sort(compared);\n  // const j = [data].sort(compared);\n\n\n  useEffect(function () {\n    if (data) {\n      var array = Object.values(data);\n      console.log(array, \"array\");\n      var arrayList = array.sort(compared);\n      console.log(arrayList, \"arrayList\");\n      setOrderListagem(arrayList);\n    }\n  }, [data]);\n  useEffect(function () {\n    setLoading(true);\n    Axios.get(url).then(function (res) {\n      setData(res.data);\n      setLoading(false);\n    });\n  }, []);\n  return __jsx(React.Fragment, null, data && __jsx(React.Fragment, null, __jsx(\"label\", null, \"Selecione a listagem do culto que deseja ver\"), __jsx(\"select\", {\n    onChange: function onChange(e) {\n      setListagem(e.target.value);\n    }\n  }, __jsx(\"option\", {\n    value: \"todos\"\n  }, \"Todos\"), __jsx(\"option\", {\n    value: \"sabado\"\n  }, \"Sabado - 19hs\"), __jsx(\"option\", {\n    value: \"manha\"\n  }, \"Domingo - 9hs\"), __jsx(\"option\", {\n    value: \"noite\"\n  }, \"Domingo - 18hs\")), (listagem == \"sabado\" || listagem == \"todos\") && __jsx(React.Fragment, null, __jsx(\"h1\", null, \"Sabado\"), __jsx(\"table\", null, __jsx(\"thead\", null, __jsx(\"tr\", null, __jsx(\"th\", null, \"Nome\"), __jsx(\"th\", null, \"Rede\"))), __jsx(\"tbody\", null, orderListagem && __jsx(React.Fragment, null, orderListagem.map(function (individuo) {\n    if (individuo.culto == \"sabado\") {\n      return __jsx(\"tr\", {\n        key: individuo\n      }, __jsx(\"td\", null, individuo.nome, \" \", individuo.sobrenome), __jsx(\"td\", null, \"Pr \", individuo.rede));\n    }\n  }))))), (listagem == \"manha\" || listagem == \"todos\") && __jsx(React.Fragment, null, __jsx(\"h1\", null, \"Manh\\xE3\"), __jsx(\"table\", null, __jsx(\"thead\", null, __jsx(\"tr\", null, __jsx(\"th\", null, \"Nome\"), __jsx(\"th\", null, \"Rede\"))), __jsx(\"tbody\", null, orderListagem && __jsx(React.Fragment, null, orderListagem.map(function (individuo) {\n    if (individuo.culto == \"manha\") {\n      return __jsx(\"tr\", {\n        key: individuo\n      }, __jsx(\"td\", null, individuo.nome, \" \", individuo.sobrenome), __jsx(\"td\", null, individuo.rede));\n    }\n  }))))), (listagem == \"noite\" || listagem == \"todos\") && __jsx(React.Fragment, null, __jsx(\"h1\", null, \"Noite\"), __jsx(\"table\", null, __jsx(\"thead\", null, __jsx(\"tr\", null, __jsx(\"th\", null, \"Nome\"), __jsx(\"th\", null, \"Rede\"))), __jsx(\"tbody\", null, orderListagem && __jsx(React.Fragment, null, orderListagem.map(function (individuo) {\n    if (individuo.culto == \"noite\") {\n      return __jsx(\"tr\", {\n        key: individuo\n      }, __jsx(\"td\", null, individuo.nome, \" \", individuo.sobrenome), __jsx(\"td\", null, individuo.rede));\n    }\n  })))))), loading && __jsx(\"p\", null, \"Loading\"));\n}\n\nexport default Page;","map":{"version":3,"sources":["C:/Users/Felipe Paulino/Documents/GitHub/Petz-listagem/pages/listagem.jsx"],"names":["Head","React","useState","useEffect","Axios","Page","loading","setLoading","data","setData","orderListagem","setOrderListagem","listagem","setListagem","url","compared","a","b","nome","array","Object","values","console","log","arrayList","sort","get","then","res","e","target","value","map","individuo","culto","sobrenome","rede"],"mappings":"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","sourcesContent":["import Head from \"next/head\";\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nimport Axios from \"axios\";\r\n\r\nfunction Page() {\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState();\r\n  const [orderListagem, setOrderListagem] = useState();\r\n  const [listagem, setListagem] = useState(\"todos\");\r\n  const url = \"https://aguaviva-rp.firebaseio.com/inscricoes.json\";\r\n\r\n  // var array = [\"jose\", \"maria\", \"anas\"];\r\n  function compared(a, b) {\r\n    if (a.nome < b.nome) return 1;\r\n    if (a.nome > b.nome) return -1;\r\n    return 0;\r\n  }\r\n  // // // const g = x.sort(compared);\r\n  // const j = [data].sort(compared);\r\n  useEffect(() => {\r\n    if (data) {\r\n      var array = Object.values(data);\r\n      console.log(array, \"array\");\r\n      const arrayList = array.sort(compared);\r\n      console.log(arrayList, \"arrayList\");\r\n      setOrderListagem(arrayList);\r\n    }\r\n  }, [data]);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    Axios.get(url).then((res) => {\r\n      setData(res.data);\r\n      setLoading(false);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {data && (\r\n        <>\r\n          <label>Selecione a listagem do culto que deseja ver</label>\r\n          <select\r\n            onChange={(e) => {\r\n              setListagem(e.target.value);\r\n            }}\r\n          >\r\n            <option value=\"todos\">Todos</option>\r\n            <option value=\"sabado\">Sabado - 19hs</option>\r\n            <option value=\"manha\">Domingo - 9hs</option>\r\n            <option value=\"noite\">Domingo - 18hs</option>\r\n          </select>\r\n          {(listagem == \"sabado\" || listagem == \"todos\") && (\r\n            <>\r\n              <h1>Sabado</h1>\r\n              <table>\r\n                <thead>\r\n                  <tr>\r\n                    <th>Nome</th>\r\n                    <th>Rede</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {orderListagem && (\r\n                    <>\r\n                      {orderListagem.map((individuo) => {\r\n                        if (individuo.culto == \"sabado\") {\r\n                          return (\r\n                            <tr key={individuo}>\r\n                              <td>\r\n                                {individuo.nome} {individuo.sobrenome}\r\n                              </td>\r\n                              <td>Pr {individuo.rede}</td>\r\n                            </tr>\r\n                          );\r\n                        }\r\n                      })}\r\n                    </>\r\n                  )}\r\n                </tbody>\r\n              </table>\r\n            </>\r\n          )}\r\n          {(listagem == \"manha\" || listagem == \"todos\") && (\r\n            <>\r\n              <h1>Manh√£</h1>\r\n              <table>\r\n                <thead>\r\n                  <tr>\r\n                    <th>Nome</th>\r\n                    <th>Rede</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {orderListagem && (\r\n                    <>\r\n                      {orderListagem.map((individuo) => {\r\n                        if (individuo.culto == \"manha\") {\r\n                          return (\r\n                            <tr key={individuo}>\r\n                              <td>\r\n                                {individuo.nome} {individuo.sobrenome}\r\n                              </td>\r\n                              <td>{individuo.rede}</td>\r\n                            </tr>\r\n                          );\r\n                        }\r\n                      })}\r\n                    </>\r\n                  )}\r\n                </tbody>\r\n              </table>\r\n            </>\r\n          )}\r\n          {(listagem == \"noite\" || listagem == \"todos\") && (\r\n            <>\r\n              <h1>Noite</h1>\r\n              <table>\r\n                <thead>\r\n                  <tr>\r\n                    <th>Nome</th>\r\n                    <th>Rede</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {orderListagem && (\r\n                    <>\r\n                      {orderListagem.map((individuo) => {\r\n                        if (individuo.culto == \"noite\") {\r\n                          return (\r\n                            <tr key={individuo}>\r\n                              <td>\r\n                                {individuo.nome} {individuo.sobrenome}\r\n                              </td>\r\n                              <td>{individuo.rede}</td>\r\n                            </tr>\r\n                          );\r\n                        }\r\n                      })}\r\n                    </>\r\n                  )}\r\n                </tbody>\r\n              </table>\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n      {loading && <p>Loading</p>}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Page;\r\n"]},"metadata":{},"sourceType":"module"}