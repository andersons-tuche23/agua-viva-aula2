{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Head from \"next/head\";\nimport React, { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\n\nfunction Page() {\n  var _useState = useState(true),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var _useState2 = useState(),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(),\n      orderListagem = _useState3[0],\n      setOrderListagem = _useState3[1];\n\n  var _useState4 = useState(true),\n      chegadaGet = _useState4[0],\n      setChegadaGet = _useState4[1];\n\n  var _useState5 = useState(\"todos\"),\n      listagem = _useState5[0],\n      setListagem = _useState5[1];\n\n  var url = \"https://aguaviva-rp.firebaseio.com/teste.json\";\n\n  function compared(a, b) {\n    if (a.nome < b.nome) return -1;\n    if (a.nome > b.nome) return 1;\n    return 0;\n  }\n\n  useEffect(function () {\n    if (data) {\n      var array = Object.entries(data);\n      setOrderListagem(array);\n    }\n  }, [data]);\n  useEffect(function () {\n    setLoading(true);\n    Axios.get(url).then(function (res) {\n      setData(res.data);\n      setLoading(false);\n    });\n  }, []);\n  var date = new Date();\n  var dia_sem = date.getDay();\n\n  var doRemove = function doRemove(id) {\n    remove(\"https://aguaviva-rp.firebaseio.com/teste/\".concat(id, \".json\"));\n  };\n\n  var remove = function remove(url) {\n    Axios[\"delete\"](url).then(function () {\n      alert(\"voc\\xEA deletou \".concat(url));\n      window.location = \"listagem\";\n    });\n  };\n\n  var doEdit = function doEdit(id, data) {\n    console.log(data, \"data\");\n    edit(\"https://aguaviva-rp.firebaseio.com/teste/\".concat(id, \".json\"), _objectSpread({}, data, {\n      chegada: !chegadaGet\n    }));\n  };\n\n  var edit = function edit(url, data) {\n    Axios.put(url, data).then(function () {\n      alert(\"voc\\xEA editou \".concat(url));\n      window.location = \"listagem\";\n    });\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"Igreja Batista \\xC1gua Viva - Ribeir\\xE3o Pires\")), __jsx(\"div\", {\n    className: \"container\"\n  }, __jsx(\"div\", {\n    className: \"header\"\n  }, __jsx(\"img\", {\n    src: \"/images/logo.jpg\"\n  }), __jsx(\"h1\", null, \"Listagem de controle de presen\\xE7a no culto\")), data && __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"select\"\n  }, __jsx(\"label\", null, \"Selecione a listagem do culto que deseja ver\"), __jsx(\"select\", {\n    onChange: function onChange(e) {\n      setListagem(e.target.value);\n    }\n  }, __jsx(\"option\", {\n    value: \"todos\"\n  }, \"Todos\"), __jsx(\"option\", {\n    value: \"sabado\"\n  }, \"Sabado - 19hs\"), __jsx(\"option\", {\n    value: \"manha\"\n  }, \"Domingo - 9hs\"), __jsx(\"option\", {\n    value: \"noite\"\n  }, \"Domingo - 18hs\"))), listagem == \"sabado\" && __jsx(React.Fragment, null, __jsx(\"h1\", null, \"Sabado - 19hs\"), __jsx(\"table\", null, __jsx(\"thead\", null, __jsx(\"tr\", null, __jsx(\"th\", null, \"Nome\"), __jsx(\"th\", null, \"Rede\"), __jsx(\"th\", null, \"Status\"))), __jsx(\"tbody\", null, orderListagem && __jsx(React.Fragment, null, orderListagem.map(function (individuo) {\n    return __jsx(React.Fragment, null, individuo.map(function (ind) {\n      if (ind.culto == \"sabado\") {\n        return __jsx(\"tr\", {\n          key: ind,\n          className: individuo[0]\n        }, __jsx(\"td\", null, ind.nome, \" \", ind.sobrenome), __jsx(\"td\", null, \"Pr \", ind.rede), __jsx(\"td\", null, __jsx(\"button\", {\n          className: \"remove\",\n          onClick: function onClick(e) {\n            return doRemove(individuo[0]);\n          }\n        }, \"Remover\")));\n      }\n    }));\n  }))))), listagem == \"manha\" && __jsx(React.Fragment, null, __jsx(\"h1\", null, \"Domingo - 9hs\"), __jsx(\"table\", null, __jsx(\"thead\", null, __jsx(\"tr\", null, __jsx(\"th\", null, \"Nome\"), __jsx(\"th\", null, \"Rede\"), __jsx(\"th\", null, \"Status\"))), __jsx(\"tbody\", null, orderListagem && __jsx(React.Fragment, null, orderListagem.map(function (individuo) {\n    return __jsx(React.Fragment, null, individuo.map(function (ind) {\n      if (ind.culto == \"manha\") {\n        return __jsx(\"tr\", {\n          key: ind,\n          className: individuo[0]\n        }, __jsx(\"td\", null, ind.nome, \" \", ind.sobrenome), __jsx(\"td\", null, \"Pr \", ind.rede), __jsx(\"td\", null, __jsx(\"button\", {\n          className: \"remove\",\n          onClick: function onClick(e) {\n            return doRemove(individuo[0]);\n          }\n        }, \"Remover\")));\n      }\n    }));\n  }))))), listagem == \"noite\" && __jsx(React.Fragment, null, __jsx(\"h1\", null, \"Domingo - 18hs\"), __jsx(\"table\", null, __jsx(\"thead\", null, __jsx(\"tr\", null, __jsx(\"th\", null, \"Nome\"), __jsx(\"th\", null, \"Rede\"), __jsx(\"th\", null, \"Status\"))), __jsx(\"tbody\", null, orderListagem && __jsx(React.Fragment, null, Object.entries(orderListagem).map(function (individuo) {\n    console.log(individuo, \"individuo\");\n    return __jsx(React.Fragment, null, individuo.map(function (ind) {\n      if (ind.culto == \"noite\") {\n        return __jsx(\"tr\", {\n          key: ind,\n          className: individuo[0]\n        }, __jsx(\"td\", null, ind.nome, \" \", ind.sobrenome), __jsx(\"td\", null, \"Pr \", ind.rede), __jsx(\"td\", null, __jsx(\"button\", {\n          className: \"remove\",\n          onClick: function onClick(e) {\n            return doRemove(individuo[0]);\n          }\n        }, \"Remover\")));\n      }\n    }));\n  }))))), listagem == \"todos\" && __jsx(React.Fragment, null, __jsx(\"h1\", null, \"Sabado - 19hs\"), __jsx(\"table\", null, __jsx(\"thead\", null, __jsx(\"tr\", null, __jsx(\"th\", null, \"Nome\"), __jsx(\"th\", null, \"Rede\"), __jsx(\"th\", null, \"Status\"))), __jsx(\"tbody\", null, orderListagem && __jsx(React.Fragment, null, orderListagem.map(function (individuo) {\n    return __jsx(React.Fragment, null, individuo.map(function (ind) {\n      if (ind.culto == \"sabado\") {\n        return __jsx(\"tr\", {\n          key: ind,\n          className: individuo[0]\n        }, __jsx(\"td\", null, ind.nome, \" \", ind.sobrenome), __jsx(\"td\", null, \"Pr \", ind.rede), __jsx(\"td\", null, __jsx(\"button\", {\n          className: \"remove\",\n          onClick: function onClick(e) {\n            return doRemove(individuo[0]);\n          }\n        }, \"Remover\")));\n      }\n    }));\n  })))), __jsx(\"h1\", null, \"Domingo - 9hs\"), __jsx(\"table\", null, __jsx(\"thead\", null, __jsx(\"tr\", null, __jsx(\"th\", null, \"Nome\"), __jsx(\"th\", null, \"Rede\"), __jsx(\"th\", null, \"Status\"), __jsx(\"th\", null, \"Chegada\"))), __jsx(\"tbody\", null, orderListagem && __jsx(React.Fragment, null, orderListagem.map(function (individuo) {\n    return __jsx(React.Fragment, null, individuo.map(function (ind) {\n      if (ind.culto == \"manha\") {\n        return __jsx(\"tr\", {\n          key: ind,\n          className: individuo[0]\n        }, __jsx(\"td\", null, ind.nome, \" \", ind.sobrenome), __jsx(\"td\", null, \"Pr \", ind.rede), __jsx(\"td\", null, __jsx(\"button\", {\n          className: \"remove\",\n          onClick: function onClick(e) {\n            return doRemove(individuo[0]);\n          }\n        }, \"Remover\")), __jsx(\"td\", {\n          onClick: function onClick(e) {\n            return doEdit(individuo[0], ind);\n          }\n        }, ind.chegada ? \"ok\" : \"n√£o\"));\n      }\n    }));\n  })))), __jsx(\"h1\", null, \"Domingo - 18hs\"), __jsx(\"table\", null, __jsx(\"thead\", null, __jsx(\"tr\", null, __jsx(\"th\", null, \"Nome\"), __jsx(\"th\", null, \"Rede\"), __jsx(\"th\", null, \"Status\"))), __jsx(\"tbody\", null, orderListagem && __jsx(React.Fragment, null, orderListagem.map(function (individuo) {\n    return __jsx(React.Fragment, null, individuo.map(function (ind) {\n      if (ind.culto == \"noite\") {\n        return __jsx(\"tr\", {\n          key: ind,\n          className: individuo[0]\n        }, __jsx(\"td\", null, ind.nome, \" \", ind.sobrenome), __jsx(\"td\", null, \"Pr \", ind.rede), __jsx(\"td\", null, __jsx(\"button\", {\n          onClick: function onClick(e) {\n            return doRemove(individuo[0]);\n          },\n          className: \"remove\"\n        }, \"Remover\")));\n      }\n    }));\n  })))))), loading && __jsx(\"p\", null, \"Carregando...\"), __jsx(\"div\", {\n    className: \"box-voltar\"\n  }, __jsx(\"a\", {\n    href: \"/\",\n    className: \"button\"\n  }, \"Voltar\"))));\n}\n\nexport default Page;","map":{"version":3,"sources":["C:/Users/Felipe Paulino/Documents/GitHub/AguaVIva-Remocao/pages/listagem/index.jsx"],"names":["Head","React","useState","useEffect","Axios","Page","loading","setLoading","data","setData","orderListagem","setOrderListagem","chegadaGet","setChegadaGet","listagem","setListagem","url","compared","a","b","nome","array","Object","entries","get","then","res","date","Date","dia_sem","getDay","doRemove","id","remove","alert","window","location","doEdit","console","log","edit","chegada","put","e","target","value","map","individuo","ind","culto","sobrenome","rede"],"mappings":"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","sourcesContent":["import Head from \"next/head\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\n\r\nfunction Page() {\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState();\r\n  const [orderListagem, setOrderListagem] = useState();\r\n  const [chegadaGet, setChegadaGet] = useState(true);\r\n  const [listagem, setListagem] = useState(\"todos\");\r\n  const url = \"https://aguaviva-rp.firebaseio.com/teste.json\";\r\n\r\n  function compared(a, b) {\r\n    if (a.nome < b.nome) return -1;\r\n    if (a.nome > b.nome) return 1;\r\n    return 0;\r\n  }\r\n  useEffect(() => {\r\n    if (data) {\r\n      var array = Object.entries(data);\r\n      setOrderListagem(array);\r\n    }\r\n  }, [data]);\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    Axios.get(url).then((res) => {\r\n      setData(res.data);\r\n      setLoading(false);\r\n    });\r\n  }, []);\r\n\r\n  var date = new Date();\r\n  var dia_sem = date.getDay();\r\n\r\n  const doRemove = (id) => {\r\n    remove(`https://aguaviva-rp.firebaseio.com/teste/${id}.json`);\r\n  };\r\n  const remove = (url) => {\r\n    Axios.delete(url).then(() => {\r\n      alert(`voc√™ deletou ${url}`);\r\n      window.location = \"listagem\";\r\n    });\r\n  };\r\n\r\n  const doEdit = (id, data) => {\r\n    console.log(data, \"data\");\r\n    edit(`https://aguaviva-rp.firebaseio.com/teste/${id}.json`, {\r\n      ...data,\r\n      chegada: !chegadaGet,\r\n    });\r\n  };\r\n  const edit = (url, data) => {\r\n    Axios.put(url, data).then(() => {\r\n      alert(`voc√™ editou ${url}`);\r\n      window.location = \"listagem\";\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <Head>\r\n        <title>Igreja Batista √Ågua Viva - Ribeir√£o Pires</title>\r\n      </Head>\r\n      <div className=\"container\">\r\n        <div className=\"header\">\r\n          <img src=\"/images/logo.jpg\" />\r\n          <h1>Listagem de controle de presen√ßa no culto</h1>\r\n        </div>\r\n        {data && (\r\n          <>\r\n            <div className=\"select\">\r\n              <label>Selecione a listagem do culto que deseja ver</label>\r\n              <select\r\n                onChange={(e) => {\r\n                  setListagem(e.target.value);\r\n                }}\r\n              >\r\n                <option value=\"todos\">Todos</option>\r\n                <option value=\"sabado\">Sabado - 19hs</option>\r\n                <option value=\"manha\">Domingo - 9hs</option>\r\n                <option value=\"noite\">Domingo - 18hs</option>\r\n              </select>\r\n            </div>\r\n            {listagem == \"sabado\" && (\r\n              <>\r\n                <h1>Sabado - 19hs</h1>\r\n                <table>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Nome</th>\r\n                      <th>Rede</th>\r\n                      <th>Status</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {orderListagem && (\r\n                      <>\r\n                        {orderListagem.map((individuo) => {\r\n                          return (\r\n                            <>\r\n                              {individuo.map((ind) => {\r\n                                if (ind.culto == \"sabado\") {\r\n                                  return (\r\n                                    <tr key={ind} className={individuo[0]}>\r\n                                      <td>\r\n                                        {ind.nome} {ind.sobrenome}\r\n                                      </td>\r\n                                      <td>Pr {ind.rede}</td>\r\n                                      <td>\r\n                                        <button\r\n                                          className=\"remove\"\r\n                                          onClick={(e) =>\r\n                                            doRemove(individuo[0])\r\n                                          }\r\n                                        >\r\n                                          Remover\r\n                                        </button>\r\n                                      </td>\r\n                                    </tr>\r\n                                  );\r\n                                }\r\n                              })}\r\n                            </>\r\n                          );\r\n                        })}\r\n                      </>\r\n                    )}\r\n                  </tbody>\r\n                </table>\r\n              </>\r\n            )}\r\n            {listagem == \"manha\" && (\r\n              <>\r\n                <h1>Domingo - 9hs</h1>\r\n                <table>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Nome</th>\r\n                      <th>Rede</th>\r\n                      <th>Status</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {orderListagem && (\r\n                      <>\r\n                        {orderListagem.map((individuo) => {\r\n                          return (\r\n                            <>\r\n                              {individuo.map((ind) => {\r\n                                if (ind.culto == \"manha\") {\r\n                                  return (\r\n                                    <tr key={ind} className={individuo[0]}>\r\n                                      <td>\r\n                                        {ind.nome} {ind.sobrenome}\r\n                                      </td>\r\n                                      <td>Pr {ind.rede}</td>\r\n                                      <td>\r\n                                        <button\r\n                                          className=\"remove\"\r\n                                          onClick={(e) =>\r\n                                            doRemove(individuo[0])\r\n                                          }\r\n                                        >\r\n                                          Remover\r\n                                        </button>\r\n                                      </td>\r\n                                    </tr>\r\n                                  );\r\n                                }\r\n                              })}\r\n                            </>\r\n                          );\r\n                        })}\r\n                      </>\r\n                    )}\r\n                  </tbody>\r\n                </table>\r\n              </>\r\n            )}\r\n            {listagem == \"noite\" && (\r\n              <>\r\n                <h1>Domingo - 18hs</h1>\r\n                <table>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Nome</th>\r\n                      <th>Rede</th>\r\n                      <th>Status</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {orderListagem && (\r\n                      <>\r\n                        {Object.entries(orderListagem).map((individuo) => {\r\n                          console.log(individuo, \"individuo\");\r\n                          return (\r\n                            <>\r\n                              {individuo.map((ind) => {\r\n                                if (ind.culto == \"noite\") {\r\n                                  return (\r\n                                    <tr key={ind} className={individuo[0]}>\r\n                                      <td>\r\n                                        {ind.nome} {ind.sobrenome}\r\n                                      </td>\r\n                                      <td>Pr {ind.rede}</td>\r\n                                      <td>\r\n                                        <button\r\n                                          className=\"remove\"\r\n                                          onClick={(e) =>\r\n                                            doRemove(individuo[0])\r\n                                          }\r\n                                        >\r\n                                          Remover\r\n                                        </button>\r\n                                      </td>\r\n                                    </tr>\r\n                                  );\r\n                                }\r\n                              })}\r\n                            </>\r\n                          );\r\n                        })}\r\n                      </>\r\n                    )}\r\n                  </tbody>\r\n                </table>\r\n              </>\r\n            )}\r\n            {listagem == \"todos\" && (\r\n              <>\r\n                <h1>Sabado - 19hs</h1>\r\n                <table>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Nome</th>\r\n                      <th>Rede</th>\r\n                      <th>Status</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {orderListagem && (\r\n                      <>\r\n                        {orderListagem.map((individuo) => {\r\n                          return (\r\n                            <>\r\n                              {individuo.map((ind) => {\r\n                                if (ind.culto == \"sabado\") {\r\n                                  return (\r\n                                    <tr key={ind} className={individuo[0]}>\r\n                                      <td>\r\n                                        {ind.nome} {ind.sobrenome}\r\n                                      </td>\r\n                                      <td>Pr {ind.rede}</td>\r\n                                      <td>\r\n                                        <button\r\n                                          className=\"remove\"\r\n                                          onClick={(e) =>\r\n                                            doRemove(individuo[0])\r\n                                          }\r\n                                        >\r\n                                          Remover\r\n                                        </button>\r\n                                      </td>\r\n                                    </tr>\r\n                                  );\r\n                                }\r\n                              })}\r\n                            </>\r\n                          );\r\n                        })}\r\n                      </>\r\n                    )}\r\n                  </tbody>\r\n                </table>\r\n\r\n                <h1>Domingo - 9hs</h1>\r\n                <table>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Nome</th>\r\n                      <th>Rede</th>\r\n                      <th>Status</th>\r\n                      <th>Chegada</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {orderListagem && (\r\n                      <>\r\n                        {orderListagem.map((individuo) => {\r\n                          return (\r\n                            <>\r\n                              {individuo.map((ind) => {\r\n                                if (ind.culto == \"manha\") {\r\n                                  return (\r\n                                    <tr key={ind} className={individuo[0]}>\r\n                                      <td>\r\n                                        {ind.nome} {ind.sobrenome}\r\n                                      </td>\r\n                                      <td>Pr {ind.rede}</td>\r\n                                      <td>\r\n                                        <button\r\n                                          className=\"remove\"\r\n                                          onClick={(e) =>\r\n                                            doRemove(individuo[0])\r\n                                          }\r\n                                        >\r\n                                          Remover\r\n                                        </button>\r\n                                      </td>\r\n                                      <td\r\n                                        onClick={(e) =>\r\n                                          doEdit(individuo[0], ind)\r\n                                        }\r\n                                      >\r\n                                        {ind.chegada ? \"ok\" : \"n√£o\"}\r\n                                      </td>\r\n                                    </tr>\r\n                                  );\r\n                                }\r\n                              })}\r\n                            </>\r\n                          );\r\n                        })}\r\n                      </>\r\n                    )}\r\n                  </tbody>\r\n                </table>\r\n\r\n                <h1>Domingo - 18hs</h1>\r\n                <table>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Nome</th>\r\n                      <th>Rede</th>\r\n                      <th>Status</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {orderListagem && (\r\n                      <>\r\n                        {orderListagem.map((individuo) => {\r\n                          return (\r\n                            <>\r\n                              {individuo.map((ind) => {\r\n                                if (ind.culto == \"noite\") {\r\n                                  return (\r\n                                    <tr key={ind} className={individuo[0]}>\r\n                                      <td>\r\n                                        {ind.nome} {ind.sobrenome}\r\n                                      </td>\r\n                                      <td>Pr {ind.rede}</td>\r\n                                      <td>\r\n                                        <button\r\n                                          onClick={(e) =>\r\n                                            doRemove(individuo[0])\r\n                                          }\r\n                                          className=\"remove\"\r\n                                        >\r\n                                          Remover\r\n                                        </button>\r\n                                      </td>\r\n                                    </tr>\r\n                                  );\r\n                                }\r\n                              })}\r\n                            </>\r\n                          );\r\n                        })}\r\n                      </>\r\n                    )}\r\n                  </tbody>\r\n                </table>\r\n              </>\r\n            )}\r\n          </>\r\n        )}\r\n        {loading && <p>Carregando...</p>}\r\n        <div className=\"box-voltar\">\r\n          <a href=\"/\" className=\"button\">\r\n            Voltar\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Page;\r\n"]},"metadata":{},"sourceType":"module"}