{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { MakeCar, ModelMake, VersionModel, VehiclesPage1, VehiclesPage2, VehiclesPage3 } from \"../src/services/requests\";\nimport Logo from \"../src/components/Logo\";\nimport SubHeader from \"../src/components/SubHeader\";\nimport Form from \"../src/components/Form\";\n\nfunction Page({\n  GetMakeCar,\n  GetVehiclesPage1,\n  GetVehiclesPage2,\n  GetVehiclesPage3\n}) {\n  const {\n    0: newVehicles,\n    1: setNewVehicles\n  } = useState(false);\n  const {\n    0: used,\n    1: setUsed\n  } = useState(false);\n  const {\n    0: makeName,\n    1: setMakeName\n  } = useState();\n  const {\n    0: modelName,\n    1: setModelName\n  } = useState();\n  const {\n    0: modelId,\n    1: setModelId\n  } = useState();\n  const {\n    0: model,\n    1: setModel\n  } = useState();\n  const {\n    0: versionId,\n    1: setVersionId\n  } = useState();\n  const {\n    0: version,\n    1: setVersion\n  } = useState();\n  const {\n    0: versionSelected,\n    1: setVersionSelected\n  } = useState();\n  const {\n    0: price,\n    1: setPrice\n  } = useState();\n  const {\n    0: year,\n    1: setYear\n  } = useState();\n  const {\n    0: stateVehicles,\n    1: setStateVehicles\n  } = useState([]);\n  const allVehicles = [...GetVehiclesPage1, ...GetVehiclesPage2, ...GetVehiclesPage3];\n\n  const readModel = async () => {\n    const vehicleSelect = GetMakeCar.filter(vehicle => {\n      return vehicle.ID == modelId;\n    });\n    const GetModelMake = await ModelMake(modelId);\n    setMakeName(vehicleSelect[0].Name);\n    setModel(GetModelMake);\n  };\n\n  useEffect(() => {\n    readModel();\n  }, [modelId]);\n\n  const readVersion = async () => {\n    let modelSelect = [];\n\n    if (model) {\n      modelSelect = model.filter(vehicle => {\n        return vehicle.ID == versionId;\n      });\n    }\n\n    const GetVersionModel = await VersionModel(versionId);\n    setModelName(modelSelect[0].Name);\n    setVersion(GetVersionModel);\n  };\n\n  useEffect(() => {\n    readVersion();\n  }, [versionId]);\n  const valormaior = parseInt(price) + 19999;\n\n  function searchVehicle() {\n    let filtredVehicle = allVehicles;\n\n    if (newVehicles) {\n      filtredVehicle = allVehicles.filter(filtred => {\n        return (makeName ? filtred.Make == makeName : []) && (modelName ? filtred.Model == modelName : []) && (year ? filtred.YearModel == year : []) && (versionSelected ? filtred.Version == versionSelected : []) && (price ? filtred.Price >= price : []) && (price ? parseInt(filtred.Price) <= valormaior : []) && filtred.KM == 0;\n      });\n    } else if (used) {\n      filtredVehicle = allVehicles.filter(filtred => {\n        return (makeName ? filtred.Make == makeName : []) && (modelName ? filtred.Model == modelName : []) && (year ? filtred.YearModel == year : []) && (versionSelected ? filtred.Version == versionSelected : []) && (price ? filtred.Price >= price : []) && (price ? parseInt(filtred.Price) <= valormaior : []) && filtred.KM != 0;\n      });\n    } else if (!newVehicles || !used) {\n      filtredVehicle = allVehicles.filter(filtred => {\n        return (makeName ? filtred.Make == makeName : []) && (modelName ? filtred.Model == modelName : []) && (year ? filtred.YearModel == year : []) && (versionSelected ? filtred.Version == versionSelected : []) && (price ? filtred.Price >= price : []) && (price ? parseInt(filtred.Price) <= valormaior : []);\n      });\n    }\n\n    setStateVehicles(filtredVehicle);\n  }\n\n  return __jsx(\"div\", {\n    className: \"container\"\n  }, __jsx(Logo, null), __jsx(SubHeader, null), __jsx(Form, {\n    newVehicles: newVehicles\n  }), __jsx(\"div\", {\n    className: \"boxes\"\n  }, stateVehicles.map(vehicle => {\n    return __jsx(\"div\", {\n      className: \"box\"\n    }, __jsx(\"div\", {\n      className: \"cute-img\"\n    }, __jsx(\"img\", {\n      src: vehicle.Image\n    })), __jsx(\"div\", {\n      className: \"box__texts\"\n    }, __jsx(\"p\", {\n      className: \"box__title\"\n    }, vehicle.Make, \" \", vehicle.Model), __jsx(\"p\", {\n      className: \"box_version\"\n    }, vehicle.Version), __jsx(\"p\", {\n      className: \"box_price\"\n    }, \" R$ \", vehicle.Price), __jsx(\"div\", {\n      className: \"box_info\"\n    }, __jsx(\"p\", null, vehicle.YearModel, \"/ \", vehicle.YearFab), __jsx(\"p\", null, vehicle.KM, \" km\"))));\n  })));\n}\n\nPage.getInitialProps = async () => {\n  const GetMakeCar = await MakeCar();\n  const GetVehiclesPage1 = await VehiclesPage1();\n  const GetVehiclesPage2 = await VehiclesPage2();\n  const GetVehiclesPage3 = await VehiclesPage3();\n  return {\n    GetMakeCar,\n    GetVehiclesPage1,\n    GetVehiclesPage2,\n    GetVehiclesPage3\n  };\n};\n\nexport default Page;","map":{"version":3,"sources":["C:/Users/Felipe Paulino/Documents/GitHub/Web-Motors/pages/index.jsx"],"names":["React","useState","useEffect","MakeCar","ModelMake","VersionModel","VehiclesPage1","VehiclesPage2","VehiclesPage3","Logo","SubHeader","Form","Page","GetMakeCar","GetVehiclesPage1","GetVehiclesPage2","GetVehiclesPage3","newVehicles","setNewVehicles","used","setUsed","makeName","setMakeName","modelName","setModelName","modelId","setModelId","model","setModel","versionId","setVersionId","version","setVersion","versionSelected","setVersionSelected","price","setPrice","year","setYear","stateVehicles","setStateVehicles","allVehicles","readModel","vehicleSelect","filter","vehicle","ID","GetModelMake","Name","readVersion","modelSelect","GetVersionModel","valormaior","parseInt","searchVehicle","filtredVehicle","filtred","Make","Model","YearModel","Version","Price","KM","map","Image","YearFab","getInitialProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport {\r\n  MakeCar,\r\n  ModelMake,\r\n  VersionModel,\r\n  VehiclesPage1,\r\n  VehiclesPage2,\r\n  VehiclesPage3,\r\n} from \"../src/services/requests\";\r\n\r\nimport Logo from \"../src/components/Logo\";\r\nimport SubHeader from \"../src/components/SubHeader\";\r\nimport Form from \"../src/components/Form\";\r\n\r\nfunction Page({\r\n  GetMakeCar,\r\n  GetVehiclesPage1,\r\n  GetVehiclesPage2,\r\n  GetVehiclesPage3,\r\n}) {\r\n  const [newVehicles, setNewVehicles] = useState(false);\r\n  const [used, setUsed] = useState(false);\r\n  const [makeName, setMakeName] = useState();\r\n  const [modelName, setModelName] = useState();\r\n  const [modelId, setModelId] = useState();\r\n  const [model, setModel] = useState();\r\n  const [versionId, setVersionId] = useState();\r\n  const [version, setVersion] = useState();\r\n  const [versionSelected, setVersionSelected] = useState();\r\n  const [price, setPrice] = useState();\r\n  const [year, setYear] = useState();\r\n  const [stateVehicles, setStateVehicles] = useState([]);\r\n\r\n  const allVehicles = [\r\n    ...GetVehiclesPage1,\r\n    ...GetVehiclesPage2,\r\n    ...GetVehiclesPage3,\r\n  ];\r\n  const readModel = async () => {\r\n    const vehicleSelect = GetMakeCar.filter((vehicle) => {\r\n      return vehicle.ID == modelId;\r\n    });\r\n    const GetModelMake = await ModelMake(modelId);\r\n    setMakeName(vehicleSelect[0].Name);\r\n    setModel(GetModelMake);\r\n  };\r\n  useEffect(() => {\r\n    readModel();\r\n  }, [modelId]);\r\n\r\n  const readVersion = async () => {\r\n    let modelSelect = [];\r\n    if (model) {\r\n      modelSelect = model.filter((vehicle) => {\r\n        return vehicle.ID == versionId;\r\n      });\r\n    }\r\n    const GetVersionModel = await VersionModel(versionId);\r\n    setModelName(modelSelect[0].Name);\r\n    setVersion(GetVersionModel);\r\n  };\r\n  useEffect(() => {\r\n    readVersion();\r\n  }, [versionId]);\r\n\r\n  const valormaior = parseInt(price) + 19999;\r\n\r\n  function searchVehicle() {\r\n    let filtredVehicle = allVehicles;\r\n    if (newVehicles) {\r\n      filtredVehicle = allVehicles.filter((filtred) => {\r\n        return (\r\n          (makeName ? filtred.Make == makeName : []) &&\r\n          (modelName ? filtred.Model == modelName : []) &&\r\n          (year ? filtred.YearModel == year : []) &&\r\n          (versionSelected ? filtred.Version == versionSelected : []) &&\r\n          (price ? filtred.Price >= price : []) &&\r\n          (price ? parseInt(filtred.Price) <= valormaior : []) &&\r\n          filtred.KM == 0\r\n        );\r\n      });\r\n    } else if (used) {\r\n      filtredVehicle = allVehicles.filter((filtred) => {\r\n        return (\r\n          (makeName ? filtred.Make == makeName : []) &&\r\n          (modelName ? filtred.Model == modelName : []) &&\r\n          (year ? filtred.YearModel == year : []) &&\r\n          (versionSelected ? filtred.Version == versionSelected : []) &&\r\n          (price ? filtred.Price >= price : []) &&\r\n          (price ? parseInt(filtred.Price) <= valormaior : []) &&\r\n          filtred.KM != 0\r\n        );\r\n      });\r\n    } else if (!newVehicles || !used) {\r\n      filtredVehicle = allVehicles.filter((filtred) => {\r\n        return (\r\n          (makeName ? filtred.Make == makeName : []) &&\r\n          (modelName ? filtred.Model == modelName : []) &&\r\n          (year ? filtred.YearModel == year : []) &&\r\n          (versionSelected ? filtred.Version == versionSelected : []) &&\r\n          (price ? filtred.Price >= price : []) &&\r\n          (price ? parseInt(filtred.Price) <= valormaior : [])\r\n        );\r\n      });\r\n    }\r\n\r\n    setStateVehicles(filtredVehicle);\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Logo />\r\n      <SubHeader />\r\n      <Form newVehicles={newVehicles} />\r\n      <div className=\"boxes\">\r\n        {stateVehicles.map((vehicle) => {\r\n          return (\r\n            <div className=\"box\">\r\n              <div className=\"cute-img\">\r\n                <img src={vehicle.Image} />\r\n              </div>\r\n              <div className=\"box__texts\">\r\n                <p className=\"box__title\">\r\n                  {vehicle.Make} {vehicle.Model}\r\n                </p>\r\n                <p className=\"box_version\">{vehicle.Version}</p>\r\n                <p className=\"box_price\"> R$ {vehicle.Price}</p>\r\n                <div className=\"box_info\">\r\n                  <p>\r\n                    {vehicle.YearModel}/ {vehicle.YearFab}\r\n                  </p>\r\n                  <p>{vehicle.KM} km</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nPage.getInitialProps = async () => {\r\n  const GetMakeCar = await MakeCar();\r\n  const GetVehiclesPage1 = await VehiclesPage1();\r\n  const GetVehiclesPage2 = await VehiclesPage2();\r\n  const GetVehiclesPage3 = await VehiclesPage3();\r\n  return {\r\n    GetMakeCar,\r\n    GetVehiclesPage1,\r\n    GetVehiclesPage2,\r\n    GetVehiclesPage3,\r\n  };\r\n};\r\n\r\nexport default Page;\r\n"]},"metadata":{},"sourceType":"module"}