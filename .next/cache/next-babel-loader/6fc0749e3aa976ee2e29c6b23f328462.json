{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { updateParameter } from \"../src/helpers/update\";\nimport { MakeCar, ModelMake, VersionModel, Vehicles } from \"../src/services/requests\"; // const Select = ({ label, options, ...rest }) => {\n//   console.log(options);\n//   return (\n//     <label className=\"label-select\">\n//       <span>{label}</span>\n//       <select {...rest} className=\"input\">\n//         {options.map(({ label, Name }) => (\n//           <option key={Name} value={Name}>\n//             {Name}\n//           </option>\n//         ))}\n//       </select>\n//     </label>\n//   );\n// };\n\nfunction Page(_ref) {\n  var GetMakeCar = _ref.GetMakeCar;\n\n  var _useState = useState(),\n      ModelId = _useState[0],\n      setModelId = _useState[1];\n\n  var _useState2 = useState(),\n      ativador = _useState2[0],\n      listModel = _useState2[1];\n\n  var teste = function teste() {\n    var GetModelMake;\n    return _regeneratorRuntime.async(function teste$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(ModelMake(ModelId));\n\n          case 2:\n            GetModelMake = _context.sent;\n            listModel(GetModelMake);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    teste();\n  }, [selectSelecionado]);\n  return __jsx(React.Fragment, null, __jsx(\"form\", null, __jsx(\"input\", null), __jsx(\"select\", {\n    className: \"input\",\n    name: \"grade_group\"\n  }, __jsx(\"option\", null)), __jsx(\"select\", {\n    className: \"input\",\n    name: \"grade_group\"\n  }, __jsx(\"option\", null)), __jsx(\"select\", {\n    className: \"input\",\n    name: \"grade_group \",\n    onChange: function onChange(e) {\n      setModelId(e.target.value);\n    }\n  }, __jsx(\"option\", null, \"Todas\"), GetMakeCar.map(function (make) {\n    return __jsx(\"option\", {\n      value: make.ID\n    }, make.Name);\n  })), __jsx(\"select\", {\n    className: \"input\",\n    name: \"grade_group\"\n  }, ativador && __jsx(React.Fragment, null, ativador.map(function (make) {\n    return __jsx(\"option\", {\n      value: make.ID\n    }, make.Name);\n  }))), __jsx(\"select\", {\n    className: \"input\",\n    name: \"grade_group\"\n  }, __jsx(\"option\", null)), __jsx(\"select\", {\n    className: \"input\",\n    name: \"grade_group\"\n  }, __jsx(\"option\", null))));\n}\n\nPage.getInitialProps = function _callee() {\n  var GetMakeCar;\n  return _regeneratorRuntime.async(function _callee$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(MakeCar());\n\n        case 2:\n          GetMakeCar = _context2.sent;\n          return _context2.abrupt(\"return\", {\n            GetMakeCar: GetMakeCar\n          });\n\n        case 4:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Page;","map":{"version":3,"sources":["C:/Users/Felipe Paulino/Documents/GitHub/Web-Motors/pages/index.jsx"],"names":["React","useState","useEffect","updateParameter","MakeCar","ModelMake","VersionModel","Vehicles","Page","GetMakeCar","ModelId","setModelId","ativador","listModel","teste","GetModelMake","selectSelecionado","e","target","value","map","make","ID","Name","getInitialProps"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,SAASC,eAAT,QAAgC,uBAAhC;AACA,SACEC,OADF,EAEEC,SAFF,EAGEC,YAHF,EAIEC,QAJF,QAKO,0BALP,C,CAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,IAAT,OAA8B;AAAA,MAAdC,UAAc,QAAdA,UAAc;;AAAA,kBACER,QAAQ,EADV;AAAA,MACrBS,OADqB;AAAA,MACZC,UADY;;AAAA,mBAEEV,QAAQ,EAFV;AAAA,MAErBW,QAFqB;AAAA,MAEXC,SAFW;;AAG5B,MAAMC,KAAK,GAAG,SAARA,KAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACeT,SAAS,CAACK,OAAD,CADxB;;AAAA;AACNK,YAAAA,YADM;AAEZF,YAAAA,SAAS,CAACE,YAAD,CAAT;;AAFY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAd;;AAIAb,EAAAA,SAAS,CAAC,YAAM;AACdY,IAAAA,KAAK;AACN,GAFQ,EAEN,CAACE,iBAAD,CAFM,CAAT;AAIA,SACE,4BACE,oBACE,oBADF,EAEE;AAAQ,IAAA,SAAS,EAAC,OAAlB;AAA0B,IAAA,IAAI,EAAC;AAA/B,KACE,qBADF,CAFF,EAKE;AAAQ,IAAA,SAAS,EAAC,OAAlB;AAA0B,IAAA,IAAI,EAAC;AAA/B,KACE,qBADF,CALF,EASE;AACE,IAAA,SAAS,EAAC,OADZ;AAEE,IAAA,IAAI,EAAC,cAFP;AAGE,IAAA,QAAQ,EAAE,kBAACC,CAAD,EAAO;AACfN,MAAAA,UAAU,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV;AACD;AALH,KAOE,8BAPF,EAQGV,UAAU,CAACW,GAAX,CAAe,UAACC,IAAD,EAAU;AACxB,WAAO;AAAQ,MAAA,KAAK,EAAEA,IAAI,CAACC;AAApB,OAAyBD,IAAI,CAACE,IAA9B,CAAP;AACD,GAFA,CARH,CATF,EAqBE;AAAQ,IAAA,SAAS,EAAC,OAAlB;AAA0B,IAAA,IAAI,EAAC;AAA/B,KACGX,QAAQ,IACP,4BACGA,QAAQ,CAACQ,GAAT,CAAa,UAACC,IAAD,EAAU;AACtB,WAAO;AAAQ,MAAA,KAAK,EAAEA,IAAI,CAACC;AAApB,OAAyBD,IAAI,CAACE,IAA9B,CAAP;AACD,GAFA,CADH,CAFJ,CArBF,EA8BE;AAAQ,IAAA,SAAS,EAAC,OAAlB;AAA0B,IAAA,IAAI,EAAC;AAA/B,KACE,qBADF,CA9BF,EAiCE;AAAQ,IAAA,SAAS,EAAC,OAAlB;AAA0B,IAAA,IAAI,EAAC;AAA/B,KACE,qBADF,CAjCF,CADF,CADF;AAyCD;;AAEDf,IAAI,CAACgB,eAAL,GAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACIpB,OAAO,EADX;;AAAA;AACfK,UAAAA,UADe;AAAA,4CAEd;AACLA,YAAAA,UAAU,EAAVA;AADK,WAFc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AAOA,eAAeD,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport { updateParameter } from \"../src/helpers/update\";\r\nimport {\r\n  MakeCar,\r\n  ModelMake,\r\n  VersionModel,\r\n  Vehicles,\r\n} from \"../src/services/requests\";\r\n\r\n// const Select = ({ label, options, ...rest }) => {\r\n//   console.log(options);\r\n//   return (\r\n//     <label className=\"label-select\">\r\n//       <span>{label}</span>\r\n//       <select {...rest} className=\"input\">\r\n//         {options.map(({ label, Name }) => (\r\n//           <option key={Name} value={Name}>\r\n//             {Name}\r\n//           </option>\r\n//         ))}\r\n//       </select>\r\n//     </label>\r\n//   );\r\n// };\r\nfunction Page({ GetMakeCar }) {\r\n  const [ModelId, setModelId] = useState();\r\n  const [ativador, listModel] = useState();\r\n  const teste = async () => {\r\n    const GetModelMake = await ModelMake(ModelId);\r\n    listModel(GetModelMake);\r\n  };\r\n  useEffect(() => {\r\n    teste();\r\n  }, [selectSelecionado]);\r\n\r\n  return (\r\n    <>\r\n      <form>\r\n        <input></input>\r\n        <select className=\"input\" name=\"grade_group\">\r\n          <option></option>\r\n        </select>\r\n        <select className=\"input\" name=\"grade_group\">\r\n          <option></option>\r\n        </select>\r\n\r\n        <select\r\n          className=\"input\"\r\n          name=\"grade_group \"\r\n          onChange={(e) => {\r\n            setModelId(e.target.value);\r\n          }}\r\n        >\r\n          <option>Todas</option>\r\n          {GetMakeCar.map((make) => {\r\n            return <option value={make.ID}>{make.Name}</option>;\r\n          })}\r\n        </select>\r\n        <select className=\"input\" name=\"grade_group\">\r\n          {ativador && (\r\n            <>\r\n              {ativador.map((make) => {\r\n                return <option value={make.ID}>{make.Name}</option>;\r\n              })}\r\n            </>\r\n          )}\r\n        </select>\r\n        <select className=\"input\" name=\"grade_group\">\r\n          <option></option>\r\n        </select>\r\n        <select className=\"input\" name=\"grade_group\">\r\n          <option></option>\r\n        </select>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nPage.getInitialProps = async () => {\r\n  const GetMakeCar = await MakeCar();\r\n  return {\r\n    GetMakeCar,\r\n  };\r\n};\r\n\r\nexport default Page;\r\n"]},"metadata":{},"sourceType":"module"}