{"ast":null,"code":"var __jsx = React.createElement;\nimport Head from \"next/head\";\nimport React, { useState, useEffect } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport Table from \"react-bootstrap/Table\";\n\nfunction Page() {\n  var _useState = useState(),\n      registros = _useState[0],\n      setRegistros = _useState[1];\n\n  var _useState2 = useState(false),\n      apagarRegistros = _useState2[0],\n      setApagarRegistros = _useState2[1];\n\n  var _useState3 = useState(false),\n      filtrarRegistros = _useState3[0],\n      setFiltraRegistros = _useState3[1];\n\n  console.log(registros);\n  useEffect(function () {\n    fetch(\"https://jsonplaceholder.typicode.com/posts\").then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      return setRegistros(json);\n    });\n  }, []);\n\n  function remove() {\n    setApagarRegistros(true);\n    fetch(\"https://jsonplaceholder.typicode.com/posts/1\", {\n      method: \"DELETE\"\n    }).then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      return setRegistros(json);\n    }).then(function (json) {\n      return setApagarRegistros(false);\n    });\n  }\n\n  function filtrar(value) {\n    if (value >= 1) {\n      setFiltraRegistros(true);\n      fetch(\"https://jsonplaceholder.typicode.com/posts?userId=\".concat(value)).then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        return setRegistros(json);\n      }).then(function (json) {\n        return setFiltraRegistros(json);\n      });\n    }\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"Seja bem vindo\")), __jsx(\"div\", {\n    className: \"container\"\n  }, __jsx(\"header\", {\n    className: \"header\"\n  }, __jsx(\"img\", {\n    className: \"logo\",\n    src: \"/images/logo.png\",\n    alt: \"petz\"\n  }), apagarRegistros && __jsx(\"p\", null, \"Apagando...\"), filtrarRegistros && __jsx(\"p\", null, \"Filtrando...\"), __jsx(\"div\", {\n    className: \"filtros\"\n  }, __jsx(Form.Group, {\n    className: \"select\"\n  }, __jsx(Form.Label, null, \"Filtrar:\"), __jsx(Form.Control, {\n    as: \"select\",\n    value: \"Choose...\",\n    onChange: function onChange(e) {\n      filtrar(e.target.value);\n    }\n  }, __jsx(\"option\", null, \"Selecione\"), __jsx(\"option\", {\n    value: \"1\"\n  }, \" 1 ao 10\"), __jsx(\"option\", {\n    value: \"2\"\n  }, \" 11 ao 20\"))), __jsx(Button, {\n    onClick: function onClick() {\n      remove();\n    }\n  }, \"Apagar todos os registros\"))), __jsx(Table, {\n    striped: true,\n    bordered: true,\n    hover: true\n  }, __jsx(\"thead\", null, __jsx(\"tr\", null, __jsx(\"th\", null, \"#\"), __jsx(\"th\", null, \"Titulo\"), __jsx(\"th\", null, \"Detalhes\"))), __jsx(\"tbody\", null, (registros === null || registros === void 0 ? void 0 : registros.length) >= 1 && __jsx(\"div\", null, registros.map(function (registro) {\n    return __jsx(\"tr\", null, __jsx(\"span\", null, registro.id), __jsx(\"span\", null, registro.title), __jsx(\"a\", {\n      href: \"\".concat(registro.id)\n    }, \"Visualizar\"), __jsx(\"br\", null));\n  }))))));\n}\n\nexport default Page;","map":{"version":3,"sources":["C:/Users/Felipe Paulino/Documents/TesteFront2/pages/index.jsx"],"names":["Head","React","useState","useEffect","Button","Form","Table","Page","registros","setRegistros","apagarRegistros","setApagarRegistros","filtrarRegistros","setFiltraRegistros","console","log","fetch","then","response","json","remove","method","filtrar","value","e","target","length","map","registro","id","title"],"mappings":"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","sourcesContent":["import Head from \"next/head\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Table from \"react-bootstrap/Table\";\r\n\r\nfunction Page() {\r\n  const [registros, setRegistros] = useState();\r\n  const [apagarRegistros, setApagarRegistros] = useState(false);\r\n  const [filtrarRegistros, setFiltraRegistros] = useState(false);\r\n  console.log(registros);\r\n  useEffect(() => {\r\n    fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n      .then((response) => response.json())\r\n      .then((json) => setRegistros(json));\r\n  }, []);\r\n\r\n  function remove() {\r\n    setApagarRegistros(true);\r\n    fetch(\"https://jsonplaceholder.typicode.com/posts/1\", {\r\n      method: \"DELETE\",\r\n    })\r\n      .then((response) => response.json())\r\n      .then((json) => setRegistros(json))\r\n      .then((json) => setApagarRegistros(false));\r\n  }\r\n\r\n  function filtrar(value) {\r\n    if (value >= 1) {\r\n      setFiltraRegistros(true);\r\n      fetch(`https://jsonplaceholder.typicode.com/posts?userId=${value}`)\r\n        .then((response) => response.json())\r\n        .then((json) => setRegistros(json))\r\n        .then((json) => setFiltraRegistros(json));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Head>\r\n        <title>Seja bem vindo</title>\r\n      </Head>\r\n      <div className=\"container\">\r\n        <header className=\"header\">\r\n          <img className=\"logo\" src=\"/images/logo.png\" alt=\"petz\" />\r\n          {apagarRegistros && <p>Apagando...</p>}\r\n          {filtrarRegistros && <p>Filtrando...</p>}\r\n          <div className=\"filtros\">\r\n            <Form.Group className=\"select\">\r\n              <Form.Label>Filtrar:</Form.Label>\r\n              <Form.Control\r\n                as=\"select\"\r\n                value=\"Choose...\"\r\n                onChange={(e) => {\r\n                  filtrar(e.target.value);\r\n                }}\r\n              >\r\n                <option>Selecione</option>\r\n                <option value=\"1\"> 1 ao 10</option>\r\n                <option value=\"2\"> 11 ao 20</option>\r\n              </Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button\r\n              onClick={() => {\r\n                remove();\r\n              }}\r\n            >\r\n              Apagar todos os registros\r\n            </Button>\r\n          </div>\r\n        </header>\r\n        <Table striped bordered hover>\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>Titulo</th>\r\n              <th>Detalhes</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {registros?.length >= 1 && (\r\n              <div>\r\n                {registros.map((registro) => {\r\n                  return (\r\n                    <tr>\r\n                      <span>{registro.id}</span>\r\n                      <span>{registro.title}</span>\r\n                      <a href={`${registro.id}`}>Visualizar</a>\r\n                      <br />\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </div>\r\n            )}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Page;\r\n"]},"metadata":{},"sourceType":"module"}