{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Documents\\\\Agua-Viva\\\\src\\\\components\\\\List.jsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from \"react\";\nimport Axios from \"axios\";\nexport default function Form(_ref) {\n  var _this = this;\n\n  var titulo = _ref.titulo,\n      culto = _ref.culto,\n      orderListagem = _ref.orderListagem,\n      remocao = _ref.remocao,\n      chegada = _ref.chegada,\n      setControle = _ref.setControle,\n      controle = _ref.controle;\n\n  var _useState = useState(),\n      soma = _useState[0],\n      setSoma = _useState[1];\n\n  var doRemove = function doRemove(id, data) {\n    remove(\"https://aguaviva-rp.firebaseio.com/teste/\".concat(id, \".json\"), data);\n  };\n\n  var remove = function remove(url, data) {\n    Axios[\"delete\"](url).then(function () {\n      alert(\"voc\\xEA removeu \".concat(data.nome, \" da listagem\"));\n      window.location = \"/remocao.html\";\n    });\n  };\n\n  var doEdit = function doEdit(id, data) {\n    setControle(!controle);\n\n    if (data.chegada) {\n      edit(\"https://aguaviva-rp.firebaseio.com/teste/\".concat(id, \".json\"), _objectSpread({}, data, {\n        chegada: false\n      }));\n    } else {\n      edit(\"https://aguaviva-rp.firebaseio.com/teste/\".concat(id, \".json\"), _objectSpread({}, data, {\n        chegada: true\n      }));\n    }\n  };\n\n  var edit = function edit(url, data) {\n    Axios.put(url, data).then(function () {// if (data.chegada) {\n      //   alert(`${data.nome} confirmou a presença no culto`);\n      // } else {\n      //   alert(`você tirou a confirmação de ${data.nome} do culto`);\n      // }\n      // window.location = \"/controle.html\";\n    });\n  }; // useEffect(() => {\n  //   let fetchListagem;\n  //   setTimeout(function () {\n  //     const fetch = async () => {\n  //       fetchListagem = await fetchTeacherMentory();\n  //       setListMentory(fetchListagem);\n  //     };\n  //     fetch();\n  //   }, 1000);\n  // }, [mod]);\n\n\n  var contadorChegada = orderListagem === null || orderListagem === void 0 ? void 0 : orderListagem.filter(function (list) {\n    return list[1].chegada === true && list[1].culto == culto;\n  });\n  var contadorCriancas = orderListagem === null || orderListagem === void 0 ? void 0 : orderListagem.filter(function (list) {\n    return list[1].culto == culto;\n  });\n  useEffect(function () {\n    if (contadorCriancas) {\n      var soma1 = _toConsumableArray(contadorCriancas);\n\n      var soma2 = soma1.map(function (som) {\n        return parseInt(som[1].criancas);\n      });\n      var total;\n\n      if (soma2.length >= 1) {\n        total = soma2.reduce(function (acumulado, x) {\n          // console.log(`${acumulado}+${x} = ${acumulado + x}`);\n          return acumulado + x;\n        });\n      } else {\n        total = 0;\n      }\n\n      setSoma(total);\n    }\n  }, [contadorCriancas]);\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"list-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, titulo), (contadorChegada === null || contadorChegada === void 0 ? void 0 : contadorChegada.length) > 0 && chegada && __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, __jsx(\"small\", {\n    className: \"contagem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, contadorChegada === null || contadorChegada === void 0 ? void 0 : contadorChegada.length), (contadorChegada === null || contadorChegada === void 0 ? void 0 : contadorChegada.length) == 1 && __jsx(React.Fragment, null, \" pessoa chegou \"), (contadorChegada === null || contadorChegada === void 0 ? void 0 : contadorChegada.length) != 1 && __jsx(React.Fragment, null, \" pessoas chegaram \"), \"no culto\")), soma != 0 && !chegada && !remocao && __jsx(\"div\", {\n    className: \"list-criancas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, __jsx(\"img\", {\n    src: \"images/bebe.svg\",\n    width: \"25\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }), __jsx(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, \" \", __jsx(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 15\n    }\n  }, soma), \" \", soma == 1 ? \"criança estará presente\" : \"crianças estarão presentes\", \" \", \"para o cultinho\"))), __jsx(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, __jsx(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, __jsx(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, \"Nome\"), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, \"Rede\"), chegada && __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 25\n    }\n  }, \"Controle Servos\"), remocao && __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 25\n    }\n  }, \"Status\"))), __jsx(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, orderListagem && __jsx(React.Fragment, null, orderListagem.map(function (individuo) {\n    return __jsx(React.Fragment, null, individuo.map(function (ind) {\n      if (ind.culto == culto) {\n        return __jsx(\"tr\", {\n          key: ind,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 27\n          }\n        }, __jsx(\"td\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 29\n          }\n        }, ind.nome, \" \", ind.sobrenome), __jsx(\"td\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 29\n          }\n        }, \"Pr \", ind.rede), chegada && __jsx(\"td\", {\n          onClick: function onClick(e) {\n            return doEdit(individuo[0], ind);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 31\n          }\n        }, ind.chegada ? __jsx(\"img\", {\n          src: \"images/carraca.svg\",\n          className: \"certo\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 35\n          }\n        }) : __jsx(\"img\", {\n          src: \"images/carraca.svg\",\n          className: \"nao_certo\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 35\n          }\n        }) // <div className=\"nao_chegou\"></div>\n        ), remocao && __jsx(\"td\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 31\n          }\n        }, __jsx(\"button\", {\n          className: \"remove\",\n          onClick: function onClick(e) {\n            return doRemove(individuo[0], ind);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 33\n          }\n        }, \"Remover\")));\n      }\n    }));\n  })))));\n}","map":{"version":3,"sources":["C:/Users/Lenovo/Documents/Agua-Viva/src/components/List.jsx"],"names":["React","useEffect","useState","Axios","Form","titulo","culto","orderListagem","remocao","chegada","setControle","controle","soma","setSoma","doRemove","id","data","remove","url","then","alert","nome","window","location","doEdit","edit","put","contadorChegada","filter","list","contadorCriancas","soma1","soma2","map","som","parseInt","criancas","total","length","reduce","acumulado","x","individuo","ind","sobrenome","rede","e"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Axios from \"axios\";\r\n\r\nexport default function Form({\r\n  titulo,\r\n  culto,\r\n  orderListagem,\r\n  remocao,\r\n  chegada,\r\n  setControle,\r\n  controle,\r\n}) {\r\n  const [soma, setSoma] = useState();\r\n  const doRemove = (id, data) => {\r\n    remove(`https://aguaviva-rp.firebaseio.com/teste/${id}.json`, data);\r\n  };\r\n  const remove = (url, data) => {\r\n    Axios.delete(url).then(() => {\r\n      alert(`você removeu ${data.nome} da listagem`);\r\n      window.location = \"/remocao.html\";\r\n    });\r\n  };\r\n  const doEdit = (id, data) => {\r\n    setControle(!controle);\r\n    if (data.chegada) {\r\n      edit(`https://aguaviva-rp.firebaseio.com/teste/${id}.json`, {\r\n        ...data,\r\n        chegada: false,\r\n      });\r\n    } else {\r\n      edit(`https://aguaviva-rp.firebaseio.com/teste/${id}.json`, {\r\n        ...data,\r\n        chegada: true,\r\n      });\r\n    }\r\n  };\r\n  const edit = (url, data) => {\r\n    Axios.put(url, data).then(() => {\r\n      // if (data.chegada) {\r\n      //   alert(`${data.nome} confirmou a presença no culto`);\r\n      // } else {\r\n      //   alert(`você tirou a confirmação de ${data.nome} do culto`);\r\n      // }\r\n      // window.location = \"/controle.html\";\r\n    });\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   let fetchListagem;\r\n  //   setTimeout(function () {\r\n  //     const fetch = async () => {\r\n  //       fetchListagem = await fetchTeacherMentory();\r\n  //       setListMentory(fetchListagem);\r\n  //     };\r\n  //     fetch();\r\n  //   }, 1000);\r\n  // }, [mod]);\r\n\r\n  const contadorChegada = orderListagem?.filter((list) => {\r\n    return list[1].chegada === true && list[1].culto == culto;\r\n  });\r\n\r\n  const contadorCriancas = orderListagem?.filter((list) => {\r\n    return list[1].culto == culto;\r\n  });\r\n  useEffect(() => {\r\n    if (contadorCriancas) {\r\n      const soma1 = [...contadorCriancas];\r\n      const soma2 = soma1.map((som) => {\r\n        return parseInt(som[1].criancas);\r\n      });\r\n      let total;\r\n      if (soma2.length >= 1) {\r\n        total = soma2.reduce((acumulado, x) => {\r\n          // console.log(`${acumulado}+${x} = ${acumulado + x}`);\r\n          return acumulado + x;\r\n        });\r\n      } else {\r\n        total = 0;\r\n      }\r\n\r\n      setSoma(total);\r\n    }\r\n  }, [contadorCriancas]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"list-header\">\r\n        <h1>{titulo}</h1>\r\n        {contadorChegada?.length > 0 && chegada && (\r\n          <span>\r\n            <small className=\"contagem\">{contadorChegada?.length}</small>\r\n            {contadorChegada?.length == 1 && <> pessoa chegou </>}\r\n            {contadorChegada?.length != 1 && <> pessoas chegaram </>}\r\n            no culto\r\n          </span>\r\n        )}\r\n      </div>\r\n      {soma != 0 && !chegada && !remocao && (\r\n        <div className=\"list-criancas\">\r\n          <span>\r\n            <img src=\"images/bebe.svg\" width=\"25\" />\r\n            <small>\r\n              {\" \"}\r\n              <b>{soma}</b>{\" \"}\r\n              {soma == 1\r\n                ? \"criança estará presente\"\r\n                : \"crianças estarão presentes\"}{\" \"}\r\n              para o cultinho\r\n            </small>\r\n          </span>\r\n        </div>\r\n      )}\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Nome</th>\r\n            <th>Rede</th>\r\n            {/* {!chegada && !remocao && <th>Crianças</th>} */}\r\n            {chegada && <th>Controle Servos</th>}\r\n            {remocao && <th>Status</th>}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {orderListagem && (\r\n            <>\r\n              {orderListagem.map((individuo) => {\r\n                return (\r\n                  <>\r\n                    {individuo.map((ind) => {\r\n                      if (ind.culto == culto) {\r\n                        return (\r\n                          <tr key={ind}>\r\n                            <td>\r\n                              {ind.nome} {ind.sobrenome}\r\n                            </td>\r\n                            <td>Pr {ind.rede}</td>\r\n                            {/* {!chegada && !remocao && (\r\n                              <td>{ind.criancas ? ind.criancas : \"0\"}</td>\r\n                            )} */}\r\n                            {chegada && (\r\n                              <td onClick={(e) => doEdit(individuo[0], ind)}>\r\n                                {ind.chegada ? (\r\n                                  <img\r\n                                    src=\"images/carraca.svg\"\r\n                                    className=\"certo\"\r\n                                  />\r\n                                ) : (\r\n                                  <img\r\n                                    src=\"images/carraca.svg\"\r\n                                    className=\"nao_certo\"\r\n                                  />\r\n                                  // <div className=\"nao_chegou\"></div>\r\n                                )}\r\n                              </td>\r\n                            )}\r\n                            {remocao && (\r\n                              <td>\r\n                                <button\r\n                                  className=\"remove\"\r\n                                  onClick={(e) => doRemove(individuo[0], ind)}\r\n                                >\r\n                                  Remover\r\n                                </button>\r\n                              </td>\r\n                            )}\r\n                          </tr>\r\n                        );\r\n                      }\r\n                    })}\r\n                  </>\r\n                );\r\n              })}\r\n            </>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}